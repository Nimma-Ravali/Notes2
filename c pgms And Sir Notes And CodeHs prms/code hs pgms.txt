Write a C program to determine the eligibility for marriage based on specific criteria. The program checks the nationality India as (I or i) 

gender, and age of an individual and provides a response regarding their eligibility for marriage.



Conditions:

----------------



* The program is designed for Indian citizens only.



* If the person is an Indian citizen, the program prompts for their gender.



* For males, the program asks for their age and checks if it falls between 21 and 50 (inclusive). 

 If so, it displays a message stating that "Congratulation! you are eligible for marriage".

 If not, it must display a message stating that "Sorry! you are not eligible for marriage".



* For females, the program asks for their age and checks if it falls…
#include <stdio.h>

int main() {
    int age;
    char ch,g;
   printf("enter your Nationality(I or i):");scanf("%c",&ch);
   if(ch=='I'||ch=='i'){
       printf("enter the gender:");scanf(" %c",&g);
        if(g=='m'||g=='M'){
           printf("enter the age:");scanf("%d",&age);
           if(age>=21||age<=50){
               printf("Congratulation! you are eligible for marriage");
           }else{
               printf("Sorry! you are not eligible for marriage");
           }
        }else if(g=='f'||g=='M'){
           printf("enter the age:");scanf("%d",&age);
           if(age>=18||age<=45){
               printf("Congratulation! you are eligible for marriage");
           }else{
               printf("Sorry! you are not eligible for marriage");
            }
        }else{    
           printf("invalid gender");
       }
   }else{
       printf("the person is not an Indian citizen");
   }
    return 0;
}
Title: Interactive Tea Stall Experience



Introduction:

Imagine strolling down a charming street, enticed by the inviting aroma of freshly brewed beverages.

You arrive at a cozy tea stall, greeted by a friendly attendant. Prepare for an interactive journey through the Tea Stall Counter!



Scenario:



Welcome and Menu:

You enter the tea stall, warmly welcomed by the attendant:



Attendant: "Welcome to our Tea Stall Counter! Our menu:"



Tea --------------------- Rs. 10

Coffee ------------------ Rs. 20

Cold coffee ------------- Rs. 50

Exit

Attendant: "Choose by entering a number (1-4):"



[User enters choice]



Customize Order:

Based on your choice, the attendant guides you:



[If choice is 1:]

Attendant: "How many cups of refreshing tea?"



[If choice is 2:]

Attendant: "How many cups of aromatic coffee?"



[If choice is 3:]

Attendant: "How many cups of chilled cold coffee?"



[User enters quantity]

Total and Payment:

The attendant shares your order total and awaits payment:



Attendant: "Total for [quantity] cup(s): Rs. [total_price]."



Attendant: "Enter your payment amount: Rs."



[User enters amount_paid]



Attendant: "Change: Rs. [change]."

Cancellation Option:

The option to cancel your order is presented:



Attendant: "Cancel your order? (Type 'Y' for Yes or 'N' for No):"



[User enters cancel_order]



[If order is canceled:]

Attendant: "Order canceled. Refund: Rs. [total_price]."



Continuation or Farewell:

Choose to explore more or conclude your visit:



Attendant: "Explore more or finalize? (Type 'Y' for Yes or 'N' for No):"



[User enters order_again]



[If user wants to continue:]

Attendant: "Certainly, let's explore."



[If user doesn't want to continue:]

Attendant: "Thank you for visiting! We look forward to serving you again soon!"
#include <stdio.h>

int main() {
    int ch,t,rt,at,cc,pay,change;
    char order;
   a:
   printf("Welcome and Menu:\n You enter the tea stall, warmly welcomed by the attendant:\n");
   printf("Welcome to our Tea Stall Counter! Our menu:\n");
   printf("Tea --------------------- Rs. 10\n");
   printf("fee ------------------ Rs. 20\n");
   printf("Cold coffee ------------- Rs. 50\n");
   printf("choose by entering a number(1-4):");
   scanf("%d",&ch);
   if(ch==1){
       printf("How many cups of refreshing tea?");
       scanf("%d",&rt);
       t=rt*10;
       printf("total for [quality] cups(s):Rs%d\n",t);
       printf("enter your payment amount:RS");scanf("%d",&pay);
       change=pay-t;
       printf("Change:%dRs\n",change);
       printf("Cancel your order?(Type 'Y' for Yes or 'N' for No):");
       scanf(" %c",&order);
       if(order=='Y'){
           printf("Certainly, let's explore");
       }else{
           printf("Thank you for visiting! We look forward to serving you again soon!");
           goto a;
       }
   }else if(ch==2){
       printf("How many cups of aromatic coffee?");
       scanf("%d",&at);
       t=at*20;
       printf("total for [quality] cups(s):Rs%d\n",t);
       printf("enter your payment amount:RS.");scanf("%d",&pay);
       change=pay-t;
       printf("Change:%dRs",change);
       printf("Cancel your order?(Type'Y'for Yes or'N'for No):");
       scanf(" %c",&order);
       if(order=='Y'){
           printf("Certainly, let's explore.");
       }else{
           printf("Thank you for visiting! We look forward to serving you again soon!");
           goto a;
       }
   }else if(ch==3){
       printf("How many cups of chilled cold coffee?");
       scanf("%d",&cc);
       t=cc*50;
       printf("Total for cup:%d\n",t);
       printf("enter your payment amount:RS.");scanf("%d",&pay);
       change=pay-t;
       printf("Change:%d\n",change);
       printf("Cancel your order? (Type 'Y' for Yes or 'N' for No):");
       scanf(" %c",&order);
       if(order=='Y'){
           printf("Certainly,let's explore");
       }else{
           printf("Thank you for visiting! We look forward to serving you again soon!");
           goto a;
       }
   }else{
       printf("invalid choice");
   }
 
    return 0;
}
#include<stdio.h>
int main()
{
    int id;
 printf("enter the user id:");scanf("%d",&id);
switch(id){
    case 11:case 12:case 13:case 14:case 15:printf("software department");break;
    case 16:case 17:case 18:case 19:case 20:printf(" developer department");break;
    case 21:case 22:case 23:printf(" management department");break;
}
    
    return 0;
}
Write a C program to accept id from user and display department.

Id: 11 to 15 is Software department

  16 to 20 is Developer department

  21 to 23 is Management department
#include<stdio.h>
int main()
{
    float s1,s2;
    char n1[20],n2[20];
    printf("enter the name:");scanf("%s",n1);
    printf("enter the score:");scanf("%f",&s1);
    printf("enter the second name:");scanf("%s",n2);
    printf("enter the score:");scanf("%f",&s2);
        switch(s1>s2){
            case 1:printf("name:%s score:%f",n1,s1);break;
            default:printf("name:%s score:%f",n2,s2);break;
        }
    return 0;
}
Write a C program that will ask for a person’s name and his/her game score. Then it will ask for a second person’s name and score. The program will print the winner’s name and also print by how many 

points that person won by comparing the scores. Develop this program by using switch case.
#include<stdio.h>
int main(){
    long amt=0,bal=2000;
    char ch;
    if(amt<=0){
    printf("enter type:");scanf("%c",&ch);
    switch(ch){
        case 'd':case 'D':printf("enter the amount to deposite:");scanf("%ld",&amt);break;
        default:printf("invalid choice");break;
    }
    bal+=amt;
    printf("balance:%ld",bal);
    }else{
        printf("invalid amt");
    }if(amt<=0&&amt>bal){
        switch(ch){
        case 'w':case 'W':printf("enter the amount withdraw:");break;
        default:printf("invalid choice");break;
    }scanf("%ld",&amt);
    bal+=amt;
    printf("balance:%ld",bal);
    }else{
        printf("invalid amt");
    }
    
return 0;
}
(Develop below program using switch case)

Write a C program that will read a float and a character from console. The character could be d for deposit or w for withdrawal.

Starting with a balance of 2000.



*Ask the user to initialize the balance and don't allow 0 and -ve values if it is 0 or -ve then print "Ammount Can't be stored".



*If the user want deposit operation then ask how much ammount he want to deposit and add that ammount

 with balance and print the balance.

*if the user want withdrwal operation then ask how much ammount he want to withdrwal and substract that 

 ammount from the balance and print the balance.



[Note: If the deposit ammount is negetive or 0 print "Invalid ammount".

    If the withdrawl ammount is negetive , 0 or greater than balance then print "Invalid ammount"]



Hints:

-------

Declare variables for the amount in float, balance in float and transaction code in char types.



Test the transaction code, if ‘d’ it is deposit. Test the ammount so that it is not negative.

If the balance is not negative or positive sum-up

the balance.

balance = balance + amount;

Test the transaction code for withdrawal, ‘w’. If the transaction code is ‘w’

Minus the withdrawn amount to update the

balance.

balance = balance - amount;

And print the balance.
#include<stdio.h>
int main(){
  int id,pass;  
char name[20];
printf("enter the id:");scanf("%d",&id);
switch(id==1001){
    case 1:printf("enter the password:");break;
    default:printf("invalid id");break;
}
scanf("%d",&pass);
switch(pass==1010){
    case 1:printf("enter the name:");break;
    default:printf("invalid password");break;
}scanf("%s",name);
}
Write a C program to take user Id as 1001 and Pasword as 1010. Ask the user to enter his id, if the id is valid 

then ask the user to enter his password ,if the password is correct then print the name of the user, otherwise 

the program will print incorrect Passoword and if the Id doesnot exits, the program will print Incorrect Id.

develop this program by using Switch case.
Hi
#include<stdio.h>
int main(){
    int n,a,s=0;
    printf("enter the three digit number");scanf("%d",&n);
    while(n!=0){
     a=n%10;
     s+=a;
     n=n/10;
    }
    printf("sum of its digits:%d",s);
    return 0;
}
Write a C program that asks the user to input a three-digit integer and calculates the sum of its digits. Using While loop.



Input as : 

Enter a three digit number : 123



Output as :

Sum of the digits : 6
#include<stdio.h>
int main(){
    int n,c=0;
   printf("enter the integer:");scanf("%d",&n);
   while(n!=0){
       n/=10;
       c++;
   }
    printf("count of the digits:%d",c);
    return 0;
}
Write a C program that asks the user to input an integer and count the digts and print the count of the digits.



Input as : 

Enter a number : 546



Output as :

Count of the digits is : 3
Write a C program to add all the natural number from 1 to n. Ask the user to give n value and print the addition value.



Input as : 

Enter n value : 10



Output as :

Sum of the natural number from 1 to 10 : 55
#include<stdio.h>
int main() {
    int n,i=1,s=0;
    printf("enter the natural number:");scanf("%d",&n);
    while(i<=n){
        s+=i;
        i++;
    }
    printf("sum of the naturals:%d",s);
    return 0;
}
Write a C prgram that asks the user to input an integer and reverse that number and display the reverse of that given number.



Case-1

-------

Input as : 

Enter a number : 123

 

Output as : 

Reverse of the given number is : 321



Case -2

______

Input as :

Enter a number : 2314



Output as : 

Reverse of the given number is : 4132
#include<stdio.h>
int main() {
    int n,a,reverse=0;
  printf("enter the integer:");scanf("%d",&n);
  while(n!=0){
     a=n%10;
     reverse=reverse*10+a;
     n/=10;
  }
   printf("reverse of the number:%d",reverse); 
    return 0;
}
write a C program to find the factorial of a given number. Take the input from the user.



Input as :

Enter a number : 5



Output as :

Factoria of 5 : 120
#include<stdio.h>
int main(){
    int n,fac=1;
    printf("enter the number:");scanf("%d",&n);
    while(n!=0){
        fac=fac*n;
        n--;
    }
    printf("factorial:%d",fac);
}
<!-- CSS Selectors -->
<!DOCTYPE html>
<html lang="en">
 <head>
  <title>Ex41</title>
  <link rel="icon"href="logo2.png">
  <style>
		div h2{ background:#ffccff; }
		#i{ background:#33ffff; }
		h2{	background:#ffff33; }
		.c{ background:#ffcc33; }
  </style>
 </head>
 <body>
	<h1>demo on  multiple selectors</h1>		
	<div>
		<h2 id="i" class="c">If you use this software after the 30 day evaluation period, you must buy the license.</h2>
	</div> 	 
 </body> 
</html>
<!-- Flex Application -->						 
<!DOCTYPE html>				 
<html lang="en"> 
  <head>
    <title>Ex42</title>
    <link rel="icon" href="logo2.svg"> 
	<link rel="stylesheet" href="flexstyles.css">
  </head>
  <body>
	<!-- heading sec -->
	<div>
		<h1>Premium Mobiles &#8377;20,000+</h1>
	</div>
	<!-- main container (Flex Box) -->
	<div id="flex-box">
		<!-- sub container 1  (flex items) -->
		<div>
			<img src="images/iphone14.webp">
			<h2>Apple Iphone14</h2>
			<span>4.6 *</span>
			<div>
				&#8377;67,999 &nbsp; &nbsp;  <strike>&#8377;79,900</strike>   &nbsp; &nbsp;		
				<span>14% off</span>
			</div>
		</div>
		<!-- sub container 2  (flex items) -->
		<div>
			<img src="images/11pro.webp">
			<h2>realme 11 Pro 5G</h2>
			<span>4.3 *</span>
			<div>
				&#8377…
/* designing styles for flex application */
#flex-box{
	display:flex;
	/*	flex-direction:column;	
	gap:30px;	*/
	justify-content:space-around;
	text-align:center;
}
/* styles for flex items */
#flex-box > div {
	box-shadow:1px 1px 10px black;
	border-radius:10px;
	padding:15px;
}
span{
	background:green;
	color:white;
	font-size:20px;
	padding:5px;
	border-radius:10px;
}
/* designing styles for flex application */
#flex-box{
	display:flex;
	/*	flex-direction:column;	
	gap:30px;	*/
	justify-content:space-around;
	text-align:center;
}
/* styles for flex items */
#flex-box > div {
	box-shadow:1px 1px 10px black;
	border-radius:10px;
	padding:15px;
}
span{
	background:green;
	color:white;
	font-size:20px;
	padding:5px;
	border-radius:10px;
}
Write a C program that prompts the user to enter a number and then prints the multiplication table for that number using a while loop.
#include<stdio.h>
int main(){
    int num,i=1,mul;
    printf("enter the num:");scanf("%d",&num);
    while(num!=0&&i<=10){
        mul=num*i;
        printf("%d*%d=%d\n",num,i,mul);
        i++;
    }
    return 0;
}
Write a C program to generate the Fibonacci sequence up to a given times using a while loop. The Fibonacci sequence is a series of numbers in which each number is the sum of the two preceding ones, usually starting with 0 and 1. The program should prompt the user to enter a positive integer and then print the Fibonacci sequence up to that number.



Input as:

Enter how many Fibonacci series you want : 9 



Output as:

0 1 1 2 3 5 8 13 21
#include<stdio.h>
int main(){
    int s,f1=0,f2=1,f3,i=3;
    printf("enter how many fibonacci series you want:");scanf("%d",&s);
    printf("%d\n%d\n",f1,f2);
    while(i<=s){
        f3=f1+f2;
        printf("%d\n",f3);
        f1=f2;
        f2=f3;
        i++;
    }
    
    return 0;
}
Write a C program to check if a given number is a palindrome. A palindrome is a number that remains the same when its digits are reversed. For example, 121, 454 and 767 are palindromic numbers. The program should prompt the user to enter a positive integer and determine whether it is a palindrome or not.



Input as:

Enter a number : 121 



Output as:

121 is a Palindrome number.
#include<stdio.h>
int main(){
    int n,rem,rev,m;
    printf("enter the number:");scanf("%d",&n);m=n;
    while(n!=0){
        rem=n%10;
        rev=rev*10+rem;
        n/=10;
    }
    if(rev==m){
        printf("its a palidrome");
    }else{
        printf("its not a palindrome");
    }
    return 0;
}
Write a C program to check the given number is a perfect number or not?

If a sum of the multiples of the number excluding the given number is same as the original number then we can say that number is a perfect number.

6 multiples are 1,2,3,6 : sum of multiples = 1+2+3 = 6

6 is a perfect number.
#include<stdio.h>
int main(){
    int n,sum=0,i=1;
    printf("enter the number:");scanf("%d",&n);
    while(i<n){
        if( n%i ==0)
        {
            sum+=i;
        }
            i++;
    }if(sum==n)
        printf("perfect num");
        else 
        printf("not a perfect");
    return 0;
}
Write a C program to check if a given number is a strong number. A strong number is a positive integer in which the sum of the factorial of its digits is equal to the number itself. For example, 145 is a strong number since 1! + 4! + 5! = 145. The program should prompt the user to enter a positive integer and determine whether it is a strong number or not.



Input as:

Enter a number : 145 



Output as:

145 is a strong number.
#include<stdio.h>
int main(){
    int n,fact=1,rem,sum=0,m;
    printf("enter the positive number:");scanf("%d",&n);m=n;
    while(n>=0){
        rem=n%10;
        if(rem!=0){
            fact=fact*rem;
            rem--;
        }sum+=fact;
        n=n/10;
    }
        (sum==m)?printf("strong"):printf("not strong");
    return 0;
}
Write a C program to find the multiplication between two number using Russian Multiplication 

method.



Input as : 12 13 

output as: 156



Definition of Russian Multiplication table :

         10          15

10/2   5          30    15*2

5/2     2          60    30*2

2/2     1          120  60*2

1/2     0          240  120*2



From the left side division we have to check the number is odd or not if it is odd then the corresponding multiplication of the second number we have to add.

So 5 and 1 are odd in this division result so the corresponding multiplication values are 30 and 120. 

30+120 = 150 which is equal to the multiplication of 10*15 = 150.
[7:30 pm, 15/09/2023] Ravali: #include<stdio.h>
int main() {
    int n,i;
    float s=1;
    printf("enter the num:");scanf("%d",&n);
    printf("1-");
    for( i=2;i<=n;i++ ){
    if(i%2==0)printf("1/%d+",i,s-=1.0/i);
    else printf("1/%d-",i,s+=1.0/i);
}
     printf("\b=%.5f",s);   
    return 0;
}
[7:41 pm, 15/09/2023] Ravali: Write a program in C to find the sum of the series 1 +11 + 111 + 1111 + .. n terms.



Test Data :

Input the number of terms : 5

Expected Output :

1 + 11 + 111 + 1111 + 11111

The Sum is : 12345
[7:41 pm, 15/09/2023] Ravali: #include<stdio.h>
int main(){
    int n,i,sum=0,t=1;
printf("enter the num:");scanf("%d",&n);
for(i=1;i<=n;i++){
    printf("%d",t);
    if(i<n){
        printf("+");
    }
    sum+=t;
    t=(t*10)+1;
}
  pr…
#include<stdio.h>
int main(){
    int n,sum,i;
printf("enter the num:");scanf("%d",&n);
printf("the first %d natural number is:",n);
for(i=1;i<=n;i++){
   printf("%d",i);
   sum+=i;
} 
printf("\nthe sum of the natural upto %d terms:%d",n,sum);
    
    return 0;
}
Write a program in C to display n terms of natural numbers and their sum. 



Test Data : 7

Expected Output :

The first 7 natural number is :

1 2 3 4 5 6 7

The Sum of Natural Numbers upto 7 terms : 28
Write a program in C to display n terms of natural numbers and their sum. 



Test Data : 7

Expected Output :

The first 7 natural number is :

1 2 3 4 5 6 7

The Sum of Natural Numbers upto 7 terms : 28
#include<stdio.h>
int main() {
    int n,i;
 printf("enter the num:");scanf("%d",&n);
 for(i=1;i<=n;i++){
     printf("number is:%d and cube of the %d is:%d\n",i,i,i*i*i);
 }
    return 0;
}
Write a C program that takes a number as input from the user and determines whether it is a spy number of not, DEVELOP this by using while loop.

A Spy number is a number where the sum of its digits is equal to its product of its digits.



For Example : 

1124 is a spy number , because the sum of its digits is 1+1+2+4 = 8 and product of its digits is equal to 1*1*2*4 = 8..


#include<stdio.h>
int main() {
    int n,prod=1,sum=0,m;
printf("enter the number:");scanf("%d",&n);m=n;
while(n!=0){
    prod*=n%10;
    sum+=n%10;
    n=n/10;
}if(sum==m){
    if(prod==m){
        printf("spy num");
    }else{
        printf("not s spy num");
    }
}
    return 0;
}
Write a C program that takes a number as input from the user and determine whether the number is a neon number or not. Develop it by using while loop.

A Neon number is a number is a number where the sum of digits of square of the number is equal to the number itself.

For Example :

9 is a Neon number . Its square is 9*9 = 81 and sum of the digits 8+1 = 9 .So both are equal.

 #include<stdio.h>
int main() {
    int n,sqr,s,m,sum=0;
printf("enter the number:");scanf("%d",&n);m=n;
s=n*n;
sqr=s;
while(s!=0){
        sum+=(s%10);
        s=s/10;
}
(sum==n)?printf("%d is the neon number.its square is %d and sum of the digits %d",n,sqr,sum):printf("not a neon num");
    
    return 0;
}
Write a C program to find the given number is a step number or not.

If the adjacent digit difference is 1 then it is a step number.



Example as: 1234



o/p : It is a step number.



Test cases you have to check: 

1234, 4321, 5432, 3210,10 are step numbers.

1001,12234 are not step numbers.

#include<stdio.h>
int main() {
    int n,a,b,sub;
printf("enter the number:");scanf("%d",&n);
while(n!=0){
    a=n%10;
    n=n/10;
    b=n%10;
    sub=a-b;
}if(sub==1)
    printf("step num");
else printf("not a step num");
    return 0;
}
Write a C program to find the alternate digit sum is same or not.



Example-1 as: 12345



1+3+5=9

2+4=6



Output as: Alternate digit sum is not same.



Example-2 as: 12122

1+1+2=4

2+2=4



Output as : Alternate digit sum is same.
---------------------------------------------

Write a C program that takes a number as input from the user and determines whether it is a spy number of not, DEVELOP this by using while loop.

A Spy number is a number where the sum of its digits is equal to its product of its digits.



For Example : 

1124 is a spy number , because the sum of its digits is 1+1+2+4 = 8 and product of its digits is equal to 1*1*2*4 = 8..
#include<stdio.h>
int main() {
    int n,prod=1,sum=0,m;
printf("enter the number:");scanf("%d",&n);m=n;
while(n!=0){
    prod*=n%10;
    sum+=n%10;
    n=n/10;
}if(sum==m){
    if(prod==m){
        printf("spy num");
    }else{
        printf("not s spy num");
    }
}
    return 0;
}

-----------------------------------------------------------------------------------

Write a C program that takes a number as input from the user and determine whether the number is a neon number or not. Develop it by using while loop.

A Neon number is a number is a number where the sum of digits of square of the number is equal to the number itself.

For Example :

9 is a Neon number . Its square is 9*9 = 81 and sum of the digits 8+1 = 9 .So both are equal.

 #include<stdio.h>
int main() {
    int n,sqr,s,m,sum=0;
printf("enter the number:");scanf("%d",&n);m=n;
s=n*n;
sqr=s;
while(s!=0){
        sum+=(s%10);
        s=s/10;
}
(sum==n)?printf("%d is the neon number.its square is %d and sum of the digits %d",n,sqr,sum):printf("not a neon num");
    
    return 0;
}
-----------------------------------------------------------------------------------------------------------------------
Write a C program to find the given number is a step number or not.

If the adjacent digit difference is 1 then it is a step number.



Example as: 1234



o/p : It is a step number.



Test cases you have to check: 

1234, 4321, 5432, 3210,10 are step numbers.

1001,12234 are not step numbers.

#include<stdio.h>
int main() {
    int n,a,b,sub;
printf("enter the number:");scanf("%d",&n);
while(n!=0){
    a=n%10;
    n=n/10;
    b=n%10;
    sub=a-b;
}if(sub==1)
    printf("step num");
else printf("not a step num");
    return 0;
}
---------------------------------------------------------------------------------------------------------------------
Write a C program to find the alternate digit sum is same or not.



Example-1 as: 12345



1+3+5=9

2+4=6



Output as: Alternate digit sum is not same.



Example-2 as: 12122

1+1+2=4

2+2=4



Output as : Alternate digit sum is same.
#include<stdio.h>
int main() {
    int n,a,sum=0,s=0,c=1;
 printf("enter the number");scanf("%d",&n);
    a=n%10;
    c++;
 while(a!=0){
    if(c%2==0){
    printf("%d+",a,sum+=a);
    printf("\b%d",sum);
    }else{
    printf("%d+",a,s+=a);
    s+=a;
    printf("\b%d",s);
    }
 }
 sum==s?printf("same"):printf("not same");
    return 0;
}
----------------------------------------------------------------------------------------------
Write a C program to find the multiplication between two number using Russian Multiplication 

method.



Input as : 12 13 

output as: 208



Definition of Russian Multiplication table :

         10          15

10/2   5          30    15*2

5/2     2          60    30*2

2/2     1          120  60*2

1/2     0          240  120*2



From the left side division we have to check the number is odd or not if it is odd then the corresponding multiplication of the second number we have to add.

So 5 and 1 are odd in this division result so the corresponding multiplication values are 30 and 120. 

30+120 = 150 which is equal to the multiplication of 10*15 = 150.

#include<stdio.h>
int main() {
    int a,b,pro=0;
    printf("enter two numbers:");
    scanf("%d,%d",&a,&b);
    while(a!=0)
    {
        printf("\n %d %d",a,b);
        if(a%2){
            printf(" +");
            pro+=b;
        }
        a/=2;
        b*=2;
    }
    printf("\n product is %d",pro);
    return 0;
}
-------------------------------------------------------------------------------------------------------------------------------

Develop a C program that calculates and prints the sum of the series 1 + 1/2! + 1/3! + 1/4!+1/5!....... up to N terms:



Input as : 

Enter the number of terms : 5



Expected output :

1 + 1/2! + 1/3! + 1/4! + 1/5! = 1.7167

#include<stdio.h>
int main(){
    int n,i,fact=1,j=1;
    float s;
   printf("enter the num:");scanf("%d",&n);
   printf("1+");
   for(i=1;i<=n;i++){
       while(j<=i){
       fact=fact*j;
       printf("1/%d%c+",i,33);
       s+=1.0/fact;
       j++;
       }
       
   }
    printf("\b=%f",s);
    return 0;
}

-------------------------------------------------------------------------------------------------------------------------------------------------

Write a C program to add all the digits present in a given number until it became a single digit. Develop it by using while loop.

[if the number is 5678, sum of digit =5+6+7+8=26 , again sum of digit of the sum : 2+6=8] 



Input as : 5678



Ouput as : 8


#include<stdio.h>
int main(){
    int n,s;
printf("enter the num:");scanf("%d",&n);    
while(n>=9&&n>=-9){
    for(s=0;n!=0;n/=10)
    s+=n%10;
    n=s;
}
 printf("%d",s);   
   return 0;
}

-------------------------------------------------------------------------------------------------------------------------------------

Write a C program to check the given number is perfect number or not. A perfect number is a positive integer that is equal to the sum of its proper divisors (excluding itself). 



Input as :

Enter a number :28

Output as :

28 is a Perfect Number

#include<stdio.h>
int main(){
    int n,i,sum=0,m;
    printf("enter the num:");scanf("%d",&n);m=n;
    for(i=1;i<n;i++){
        if(n%i==0)
        sum+=i;
    }printf("%d\n",m);
    printf("%d\n",sum);
    (m==sum)?printf("perfect"):printf("not perfect");
    return 0;
}

------------------------------------------------------------------------------------------------------------------------------------------

Write a C program to find the HCF (Highest Common Factor) of two numbers.



Input 1st number for HCF: 24

Input 2nd number for HCF: 28

Expected Output :

HCF of 24 and 28 is : 4

 #include<stdio.h>
int main(){
    int f,s,i,hcf;
    printf("enter first num:");
    printf("enter second num:");
    scanf("%d\n%d",&f,&s);
    for(i=1;i<=f/2||i<=s/2;i++){
        if(f%i==0&&s%i==0)
        hcf=i;
    }
    printf("%d",hcf);
    return 0;
}

-----------------------------------------------------------------------------------------------------------------------------------------------------

Write a C program to check the given number is a prime number or not.



Input as :

Enter a number : 13

Expected Output :

13 is a Prime Number.

#include<stdio.h>
int main(){
int n,c=0,m,i;
printf("Enter a number :");
scanf("%d",&n);
m=n;
for(i=1;i<=n;i++)
{
if(n%i==0)
c++;
}
c==2?printf("%d is prime number",m):printf("%d is not prime number",m);
    return 0;
}

------------------------------------------------------------------------------------------------------------------------------------------

Find the output of the given program?

int main()
{
int i = 0;
while(0)
{
printf(“N”);
i++;
if(i==5) break;
}
return 0;
}



a) NNNN


b) NNNNN


c) Compiled Successfully, No Output


d) Compile-time error

Question: 2
int main()
{
int i=1;
while(1)
{
printf(“N”);
i++;
if(i==5) break;
}
return 0;
}



a) N


b) NNNN


c) NNNNN


d) Compile-time error

Question: 3
What is the output of the given below program?

include
int main()
{
while(1)
{
printf(“N”);
i++;
if(i==3) break;
}
return 0;
}



a) N


b) NN


c) NNN


d) Compiled Successfully, No Output


e) Compile-time error

Question: 4
What is the output of the given below program?

int main()
{
while(true)
{
printf(“Know Program”);
break;
}
return 0;
}



a) Know Program


b) Compiled Successfully, No Output


c) Know Program is printed an infinite number of times.


d) Compile-time error

Question: 5
Find the output of the given program?

int main()
{
int a = 3;
while(a == 3)
{
printf(“Know Program”);
break;
}
return 0;
}



a) Know Program


b) Compiled Successfully, No Output


c) Know Program is printed infinite times.


d) Compile-time error

Question: 6
What is the output of this C code?

include
void main()
{
    int k = 0;
    for (k)
        printf("Hello");
}


a. Compile time error


b. hello


c. Nothing


d. Varies

Question: 7
Find the output of the given program?

int main()
{
int a = 3;
while(a >= 5)
{
printf(“Hello “);
break;
}
printf(“Know Program “);
return 0;
}



a) Hello


b) Know Program


c) Hello Know Program


d) Compile-time error

Question: 8
What is the output of this C code?

void main()
{
    int k = 0;
    for (k < 3; k++)
    printf("Hello");
}


a. Compile time error


b. Hello is printed thrice


c. Nothing


d. Varies

Question: 9
What is the output of the given below program?

int main()
{
int a = 5;
while(a <= 9)
{
printf(“%d”, a);
a++;
break;
}
return 0;
}



a) 5


b) 5678


c) 56789


d) Compile-time error

Question: 10
Find the output of the given program?

int main()
{
int a = 0;
while(++a)
{
printf(“Know Program “);
}
return 0;
}



a) Know Program


b) Compiled Successfully, No Output


c) Know Program is printed infinite times.


d) Compile-time error

Question: 11
Find the output of the given program?

int main()
{
int a = 0;
while(a)
{
printf(“Know Program “);
a++;
}
return 0;
}



a) Know Program


b) Compiled Successfully, No Output


c) Know Program is printed infinite times.


d) Compile-time error

Question: 12
How many times i value is checked in the following C code?

int main()
{
    int i = 0;
    while (i < 3)
        i++;
    printf("In while loop\n");
}


a) 2


b) 3


c) 4


d) 1

Question: 13
What is the output of this C code?

void main()
{
    double k = 0;
    for (k = 0.0; k < 3.0; k++)
        printf("Hello");
}


a. Run time error


b. Hello is printed thrice


c. Hello is printed twice


d. Hello is printed infinitely

Question: 14
What is the output of this C code?

include
void main()
{
    int k;
    for (k = -3; k < -5; k++)
        printf("Hello");
}


a. Hello


b. Infinite hello


c. Run time error


d. Nothing

Question: 15
How many times letsfindcourse will be printed?

int main()
{
int i = -5;
while (i <= 5)
{
if (i >= 0)
break;
else
{
i += 1;
continue;
}
printf(“letsfindcourse”);
}
return 0;
}



A. 5 times


B. 10 times


C. 0 times


D. Infinite times

Question: 16
What is the output of this C code?

include
int main()
{
    int i = 0;
    for (; ; ;)
        printf("In for loop\n");
        printf("After loop\n");
}


a. Compile time error


b. Infinite loop


c. After loop


d. Undefined behaviour

Question: 17
What will be the output of following program ?
.#define TRUE 1
int main()
{
int loop=10;
while(printf(“Hello “) && loop- -);
}



1)Hello


2)Hello Hello Hello Hello … (Infinite times)


3)Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello


4)Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello

Question: 18
What is the output of this C code?

include
int main()
{
    int i = 0;
    for (; ; ;)
        printf("In for loop\n");
        printf("After loop\n");
}


1)Compiler time Error


In for loop


In for loop After loop\


4)After loop

Question: 19
What is the output of this C code?

include
int main()
{
    int i = 0;
    for (i++; i == 1; i = 2)
        printf("In for loop ");
        printf("After loop\n");
}


a. In for loop after loop


b. After loop


c. Compile time error


d. Undefined behaviour

Question: 20
What will be the output?
int main()
{
int i=5;
for (; 0; i- -)
{
printf(“%d\n”,i);
}
return 0;
}



1)54321


2)No output


3)Compile time error


4)Run time error

Question: 21
What is the value of ‘n’ after while loop executed?
int main()
{
int n=0,a=5,b=10;
while( n<=( b << a ) )
{
n++;
}
printf(“%d”,n);
}



1)64


2)256


3)321


4)320

Question: 22
What is the output of C Program.?
int main()
{
int a=5;

while(a=123)
{
printf(“RABBIT\n”);
break;
}
printf(“GREEN”);

return 0;
}



1) GREEN


2) RABBIT
GREEN


3) RABBIT is printed unlimited number of times.


4) Compiler error.

Question: 23
What is the output of C Program.?
int main()
{
int a=32;

do
{
printf(“%d “, a);
a++;
}while(a <= 30);

return 0;
}



1) 32


2) 33


3) 30


4) No Output

Question: 24
What is the output of this C code?

void main()
{
int i = 0;
while (i < 10)
{
i++;
printf(“hi\n”);
while (i < 8)
{
i++;
printf(“hello\n”);
}
}
}



a. Hi is printed 8 times, hello 7 times and then hi 2 times


b. Hi is printed 10 times, hello 7 times


c. Hi is printed once, hello 7 times


d. Hi is printed once, hello 7 times and then hi 2 times

Question: 25
What is the output of this C code?

int main()
{
    int i = 0, j = 0;
    while (i < 5, j < 10)
    {
        i++;
        j++;
    }
    printf("%d, %d\n", i, j);
}


a. 5, 5


b. 5, 10


c. 10, 10


d. Syntax error

Question: 26
What is the output of this C code if we are printing a ?

int main()
{
    int a = 0, i = 0, b;
    for (i = 0;i < 5; i++)
    {
        a++;
        if (i == 3)
            break;
    }
}


a. 1


b. 2


c. 3


d. 4

Question: 27
What is the output of C Program.?
int main()
{
while(i<1)
{
int i=0;
i++;
printf(“Know Program”);
break;
}
return 0;
}



a) Know Program


b) Compiled Successfully, No Output


c) Know Program is printed an infinite number of times.


d) Compile-time error

Question: 28
What is the output of this C code?

void main()
{
    int i = 0;
    for (i = 0;i < 5; i++)
        if (i < 4)
        {
            printf("Hello");
            break;
        }
}


a. Hello is printed 5 times


b. Hello is printed 4 times


c. Hello


d. Hello is printed 3 times

Question: 29
What is the output of C Program.?
int main()
{
int a = 0;
while(++a)
{
printf(“Know Program “);
while(a){
printf(“Hi\n”);
break;
}
}
return 0;
}



a) Know Program Hi


b) Compiled Successfully, No Output


c) Know Program and Hi printed infinite times.


d) Compile-time error

Question: 30
What is the output of C Program.?

int main() {
int i = 5;
while (i) {
printf(“%d “, 1- -+0);
}
return 0;
}



A. compile time error


B. 5 4 3 2 1


C. 4 3 2 1 0


D. 1 2 3 4 5

------------------------------------------------------------------------------------------------------------
Write a C program to print square pattern program using * 



* * * * *

* * * * *

* * * * *

* * * * *

* * * * *

#include<stdio.h>
int main()
{
    int nr,nc,i,j;
printf("enter no of rows and columns:");scanf("%d%d",&nr,&nc);
for(i=1;i<=nr;i++){
    for(j=1;j<=nc;j++)
    {
        printf("*");
    }
    printf("\n");
}

return 0;

}
---------------------------------------------------------------------------------------------------------------

Write a C program to print square pattern program 



1 1 1 1 1 

2 2 2 2 2 

3 3 3 3 3 

4 4 4 4 4 

5 5 5 5 5 

#include<stdio.h>
int main()
{
    int nr,nc,i,j;
printf("enter the no of rows and columns:");scanf("%d%d",&nr,&nc);
for(i=1;i<=nr;i++){
    for(j=1;j<=nc;j++){
        printf("%d",i);
    }
    printf("\n");
}

return 0;

}
----------------------------------------------------------------------------------------------------------------------
Write a C program to print square pattern program  



1 2 3 4 5 

1 2 3 4 5 

1 2 3 4 5

1 2 3 4 5

1 2 3 4 5

#include<stdio.h>
int main()
{
    int nr,nc,i,j;
printf("enter the no of rows and columns:");scanf("%d%d",&nr,&nc);
for(i=1;i<=nr;i++){
    for(j=1;j<=nc;j++){
        printf("%d",j);
    }
    printf("\n");
}

return 0;

}
--------------------------------------------------------------------------------------------
Write a C program to print square pattern program 

   1   3   5   7  9 

  11 13 15 17 19

  21 23 25 27 29

  31 33 35 37 39


#include<stdio.h>
int main()
{
    int nr,nc,i,j,k=1;
printf("enter no of rows and columns:");scanf("%d%d",&nr,&nc);
for(i=1;i<=nr;i++){
    for(j=1;j<=nc;j++){
        printf("%d",k);
        k+=2;
       
    }

    printf("\n");
}

return 0;

}
--------------------------------------------------------------------------------------------------
Write a C program to print square pattern program 



1 0 1 0 1

1 0 1 0 1

1 0 1 0 1

1 0 1 0 1

1 0 1 0 1


#include<stdio.h>
int main()
{
    int i,j,nr,nc;
printf("enter the no of rows and columns:");scanf("%d%d",&nr,&nc);
for(i=1;i<=nr;i++){
    for(j=1;j<=nc;j++){
       if(j%2==0) printf("0");
       else printf("1");
    }
    printf("\n");
}

return 0;

}
-----------------------------------------------------------------------------------------------
Write a C program to print square pattern program 



  2  4  6   8   10

12 14 16 18 20

22 24 26 28 30

32 34 36 38 40

42 44 46 48 50


#include<stdio.h>
int main()
{
    int i,j,nr,nc,k=2;
printf("enter the no of rows anf columns:");scanf("%d%d",&nr,&nc);
for(i=1;i<=nr;i++){
    for(j=1;j<=nc;j++){
        printf("%d",k);
        k+=2;
    }
    printf("\n");
}

return 0;
}
------------------------------------------------------------------------------------------
Write a C program to find all Armstrong numbers between 100 to 999.

A three digit number is called Armstrong number if sum of cube of its digit is equal to number itself.

E.g.- 153 is an Armstrong number because (1)^3+(5)^3+(3)^3 = 153.
#include<stdio.h>
#include<math.h>
int main() {
    int n,c,m,s=0,pow=1;
    printf("enter the num:");scanf("%d",&n);m=n;
        for( ;n<=999;n=n/10){
          for(c=1;c<=3;c++){ 
           pow=pow*n%10;
            s+=pow;
          }
        }
        printf("%d",s);
    m==s?printf("amstrong num"):printf("not a amstromg num");
return 0;    
}


-------------------------------------------------------------------------------

Write a C program to print all the automorphic number from 1 to 500.

An automorphic number is a number whose square ends in the same digits as the number itself.

For example:

5 is an automorphic number because 5 * 5 = 25 (last digit is 5).
6 is an automorphic number because 6 * 6 = 36 (last digit is 6).
25 is an automorphic number because 25 * 25 = 625 (last digits are 25).
Write a C program that allows the user to enter a number. The program should calculate the square of the entered number and check if it is an automorphic number or not.

Your program should:

Prompt the user to enter a number.
Calculate the square of the entered number.
Check if the square ends with the same digits as the original number.
Display whether the entered number is an automorphic number or not, along with the calculated square.


Input as : 

Enter n value : 500



Expected output :

1 5  6  25  76  376


#include<stdio.h>
int main() {
    int n,i,s;
    printf("enter the num:");scanf(" %d",&n);
    for(i=1;i<=n;i++){
        s=i*i;
         if(s%10==i)printf("%d\n",i);
         else if(s%100==i)printf("%d\n",i);
         else if(s%1000==i)printf("%d\n",i);
         
    }
    
return 0;    
}
--------------------------------------------------------------------------------------

Write a program in C to check whether a number can be expressed as the sum of two prime. 



Input as: 16



Expected Output :

16 = 3 + 13

16 = 5 + 11

#include<stdio.h>
int main() {
    int n,i,j,k;
    printf("enter the num:");scanf(" %d",&n);
    for(i=1;i<=n;i++){
        for(j=2;j<=n;j++){
            for(k=1;k<=i/2&&k<=j/2;k++){
            if(i%k==0&&j%k==0){
                if((i+j)==n)printf(" %d= %d+ %d\n",n,i,j);  
            }
            }
          
        }
    }
return 0;    
}
-------------------------------------------------------------------------------------------
Write a C program to input a number from user and find Prime factors of the given number using

loop. 



Input as : 116

Expected output as :

Prime factors of 10 : 2 29

#include<stdio.h>
int main() {
    int n,i,c=0;
printf("enter the num:");scanf(" %d",&n);
for(i=1;i<=n;i++){
    if(n%i==0)c++;
    if(c==2)printf(" %d",i);
}

return 0;    
}
------------------------------------------------------------------------------------
if a number when reversed, the square of the number and the square of the reversed number should be number which are reverse to each other, is Adam number.

Example: 

Input: 12

12 ^ 2 = 144

21 ^ 2 = 441

The reverse of 144 is equal to 441 and reverse of 441 is equal to 144 so., 12 is an Adam number.

11, 12, 13, 21, 22, 31, 101, 102, 103, 111, 112, 113, 121 ... are Adam numbers.

#include<stdio.h>
int main() {
    int n,rev,sqr,s,a=0;
    printf("enter the num:");scanf("%d",&n);
    s=n*n;
    for(;n!=0;n=n/10){
        rev=rev*10+n%10;
        sqr=rev*rev;
        for(;s!=0;s=s/10){
            a=a*10+s%10;
        }
    }
    if(a==sqr)printf("adam");
return 0;    
}

-----------------------------------------------------------------------------------------------------------------------------------------------


What will be the output of the given program?

include
void main()
{
int i=10;
printf(“%3d”, i);
{
int i=20;
printf(“%3d”, i);
i++;
printf(“%3d”, i);
}
printf(“%3d”, i);
}



A. 10 10 11 11


B. 10 20 21 21


C. 10 20 21 10


D. 10 20 21 20

Question: 2
What will be the value of i and j after execution of following program?

include
void main()
{
int i, j;
for(i=0,j=0;i<10,j<20;i++,j++){
printf(“i=%d %t j=%d”, i, j);
}
}



A. 10 10


B. 10 20


C. 19 19


D. Run time error

Question: 3
What will be the output given program?

include
void main()
{
int i = -10;
for(;i;printf(“%d “, i++));
}



A. -10 to -1


B. -10 to infinite


C. -10 to 0


D. Complier error

Question: 4
What will be the value of sum after the following program is executed?

include
void main()
{
int sum=1;
int a=9;
do{
a=a-1;
sum=sum*2;
}while(a>9);
printf(“%d”,sum);
}



A. 1


B. 2


C. 9


D. 0.5


E. 0.25

Question: 5
What will be the final value of the digit?

include
void main()
{
int digit = 0;
for( ; digit <= 9; )
digit++;
digit *= 2;
–digit;

printf(“%d”,digit);
}



A. -1


B. 17


C. 19


D. 16


E. 20

Question: 6
What is the output of the above program?

include
void main()
{
int i = 0;
do
{
printf(“Hello”);
} while (i != 0);
}



A. Hello


B. H is printed infinite times


C. Runtime error


D. Syntax error


E. No output

Question: 7
Find the output of the following program.

include
void main()
{
int y=10;
if(y++>9 && y++!=10 && y++>11)
printf(“%d”, y);
else
printf(“%d”, y);
}



A. 11


B. 12


C. 13


D. 14


E. Compilation error

Question: 8
What will be the output of the following C code?

include
int main()
{
int i = 0;
while (i < 2)
{
if (i == 1)
break;
i++;
if (i == 1)
continue;
printf(“In while loop\n”);
}
printf(“After loop\n”);
}



A. In while loop
After loop


B. After loop


C. In while loop
In while loop
After loop


D. In while loop

Question: 9
What will be the output of the following C code?

include
int main()
{
int i = 0, j = 0;
l1: while (i < 2)
{
i++;
while (j < 3)
{
printf(“loop “);
goto l1;
}
}
}



A. loop loop


B. Compile time error


C. loop loop loop loop


D. Infinite loop

Question: 10
What will be the output of the following C code?

include
int main()
{
int i = 0;
do
{
i++;
if (i == 2)
continue;
printf(“In while loop “);
} while (i < 2);
printf(“%d\n”, i);
}



A. In while loop 2


B. In while loop in while loop 3


C. In while loop 3


D. Infinite loop

Question: 11
What will be the output of the following C code?

include
void main()
{
int k;
for (k = -3; k < -5; k++)
printf(“Hello”);
}



A. Hello


B. Infinite hello


C. Run time error


D. Nothing

Question: 12
How many times i value is checked in the following C code?

include
int main()
{
int i = 0;
while (i < 3)
i++;
printf(“In while loop\n”);
}



A. 2


B. 3


C. In while loop


D. 1

Question: 13
What will be the output of the following C code?

include
int main()
{
int a = 0, i = 0, b;
for (i = 0;i < 5; i++)
{
a++;
continue;
}
printf(“%d”,a);
}



A. 2


B. 3


C. 4


D. 5

Question: 14
What will be the output of the following C code?

include
int main()
{
int i = 0;
while (i = 0)
printf(“True\n”);
printf(“False\n”);
}



A. True (infinite time)


B. True (1 time) False


C. False


D. Compiler dependent

Question: 15
Which keyword can be used for coming out of loop?



A. return


B. break


C. exit


D. both A and B

Question: 16
How many times NareshIt will be printed?

include
int main()
{
int i = -5;
while (i <= 5)
{
if (i >= 0)
break;
else
{
i += 1;
continue;
}
printf(“NareshIt”);
}
return 0;
}



A. 5 times


B. 10 times


C. 0 times


D. Infinite times

Question: 17
Which of the given statment is true about the given code ?

int main()
{
int i = 0;
for ( ; i < 5 ; )
{
if (i < 5)
printf(“Hello”, i++);
else
continue;
printf(“World”);
}
return 0;
}



A. It will print hello 5 times followed by World one time


B. It will print helloWorld 5 times


C. It will print helloWorld infinite times


D. Compilation Error

Question: 18
What is the output of the following code?

int main()
{
int i = 0;
switch(i)
{
case 0 : i++;
case 1 : i+++2;
case 2 : ++i;
}
printf(“%d”,i++);

return 0;
}



A. 2


B. 3


C. 4


D. 5

Question: 19
How many z are printed?

for(i=0,j=10;i < j;i++,j--) 
    printf("z");


A. 10


B. 5


C. 4


D. 6

Question: 20
What will be the output of the following C code?

#include <stdio.h>
int main()
{
    short i;
    for (i = 1; i >= 0; i++)
        printf("%d\n", i);

}


a) The control won’t fall into the for loop
no errors


b) Numbers will be displayed until the signed limit of short and throw a runtime error


c) Numbers will be displayed until the signed limit of short and program will successfully terminate


d) This program will get into an infinite loop and keep printing numbers with

Question: 21
What will be the output of the following C code?

#include <stdio.h>
void main()
{
    int k = 0;
    for (k < 3; k++)
    printf("Hello");
}


a) Compile time error


c) Nothing


d) Varies


b) Hello is printed thrice

Question: 22
What will be the output of the following C code?

#include <stdio.h>
void main()
{
    double k = 0;
    for (k = 0.0; k < 3.0; k++)
        printf("Hello");
}


a) Run time error


b) Hello is printed thrice


c) Hello is printed twice


d) Hello is printed infinitely

Question: 23
What will be the value of y ?

include
int main()
{
    int x=8;
 int y = (x  > 6 ? 4 : 6);
        printf("%d\n", y);

}


a) Compilation Error


b) 0


c) 4


d) 6

Question: 24
Switch statement accepts



a) int


b) char


c) long


d) All of the above

Question: 25
What will be the output of the following C code?

include
int main()
{
int i = 1024;
for (; i; i >>= 1){
printf(“NareshIt”);
break;
}
return 0;
}



a) NareshIt print 12 times


b) NareshIt print 7 times


c) NareshIt


d) Compiler Error

Question: 26
Find the output of the given program?

include
int main()
{
int i;
for (;;)
{
printf(“Know Program”);
break;
}
return 0;
}



a) Know Program


b) Know Program is printed infinite times.


c) Compiled Successfully, No Output


d) Compile-time error

Question: 27
Find the output of the given program?

include
int main()
{
int i;
for (printf(“Hello “); printf(“Know “); printf(“Program “))
{
break;
}
return 0;
}



a) Hello


b) Hello Know


c) Hello Know Program


d) Compiled Successfully, No Output


e) Compile-time error

Question: 28
Find the output of the given program?

include
int main()
{
int i = 0;
for (i < 5; i++)
{
printf(“Program”);
}
return 0;
}



a) Program


b) Program is printed infinite times.


c) Compiled Successfully, No Output


d) Compile-time error


e) None of These

Question: 29
Find the output of the given program?

include
int main()
{
int i = 0;
for (i=1.0; i<5.0; i++)
{
printf(“%d”, i);
}
return 0;
}



a) 1234


b) 12345


c) Compiled Successfully, No Output


d) Compile-time error

Question: 30
What is the output of the given below program?

include
int main()
{
int i = 0;
for (i=1.3; i<5.5; i++)
{
printf(“%d”, i);
}
return 0;
}



a) 1234


b) 12345


c) Compiled Successfully, No Output


d) Compile-time error


--------------------------------------------------------------------------------------------------------------------------------

Write a logic for the following pattern in c?



    1

    2  3

    4  5  6

    7  8  9  10

    11 12 13 14 15

#include<stdio.h>
int main()
{
    int n,i,j,a=1;
printf("enter the num:");scanf("%d",&n);
for(i=1;i<=n;i++){
    for(j=1;j<=i;j++){
        printf("%2d",a);
        a++;
    }
    printf("\n");
}
return 0;
}
---------------------------------------------------------------------------------------------------
Write a logic for the following pattern in c?



    1

    2  3

    3  4  5

    4  5  6  7

    5  6  7  8  9

#include<stdio.h>
int main()
{
int n,i,j;
printf("enter the num:");scanf("%d",&n);
        for(i=1;i<=n;i++){
            for(j=0;j<i;j++){
        printf("%2d",i+j);
    }
    printf("\n");
}
return 0;
}
---------------------------------------------------------------------------------------------
Write a logic for the following pattern in c?



    1

    1  2

    3  5  8

    13 21 34 55


#include<stdio.h>
int main()
{
    int n,i,j,f1=0,f2=1,f3;
printf("enter the num;");scanf("%d",&n);
for(i=1;i<=n;i++){
    for(j=1;j<=i;j++){
        if(i==1){
         printf("  %d",i);   
       } else{
        f3=f1+f2;
        printf("%3d",f3);
        f1=f2;
        f2=f3;
        }
    }
    printf("\n");
}
return 0;
}
----------------------------------------------------------------------------------------------------
Write a logic for the following pattern in c?



    0

    1 0

    0 1 0

    1 0 1 0

    0 1 0 1 0 


#include<stdio.h>
int main()
{
    int n,i,j;
printf("enter the num:");scanf("%d",&n);
for(i=1;i<=n;i++){
    for(j=1;j<=i;j++){
        if((i+j)%2==0)printf("0");else printf("1");
    }
    printf("\n");
}
return 0;
}
--------------------------------------------------------------------------------------
Write a logic for the following pattern in c?



    0

    0 1 

    0 1 1

    0 1 1 2

    0 1 1 2 3


#include<stdio.h>
int main()
{
    int n,i,j,f1,f2,f3;
printf("enter the num:");scanf("%d",&n);
for(i=1;i<=n;i++){
    f1=0,f2=1;
    for(j=1;j<=i;j++){
        f3=f1+f2;
        printf("%3d",f1);
        f1=f2;
        f2=f3;
    }
    printf("\n");
}
return 0;
}
----------------------------------------------------------------------------------------------
Write a logic for the following pattern in c?



    0  

    0 1

    0 1 0

    0 1 0 1

    0 1 0 1 0

    0 1 0 1 0 1


#include<stdio.h>
int main()
{
    int n,i,j;
printf("enter the num:");scanf("%d",&n);
for(i=1;i<=n;i++){
    for(j=1;j<=i;j++){
    if(j%2==0)printf("1");
    else printf("0");
    }
    printf("\n");
}
return 0;
}
-------------------------------------------------------------------------------------------
Write a logic for the following pattern in c?



    A 

    B A

    C B A

    D C B A

    E D C B A


#include<stdio.h>
int main()
{
    int n,i,j,a=64,k;
printf("enter the num:");scanf("%d",&n);
for(i=1;i<=n;i++)
{
    k=a+i;
    for(j=1;j<=i;j++)
    {
     printf(" %c",k);
     k--;
    }
    printf("\n");
}
return 0;
}
--------------------------------------------------------------------------------
Write a logic for the following pattern in c?



    1

    2  6

    3  7  10

    4  8  11  13

    5  9  12  14  15


#include<stdio.h>
int main()
{
    int n,i,j,r=4;
printf("enter the num:");scanf("%d",&n);
for(i=1;i<=n;i++)
{
    r=i;
    for(j=1;j<i;j++){
       printf("%d",i);

    }
    printf("\n");
}
return 0;
}
-------------------------------------------------------------------------------------

Write a c program to given number is a twisted prime number, you can follow these steps:



a-Check if the given number is prime.

b-If it's prime, reverse the number.

c-Check if the reversed number is also prime.

d-If both conditions are met, the number is a twisted prime.



Input- 11

output- 11 is twisted prime





Input- 43

output- 43 is not twisted prime


#include <stdio.h>

int main() {
    int n,i,rev=0,a;
    printf("enter the num:");scanf("%d",&n);
    for(i=2;i<=n/2;i++){
        if(n%i==0)printf("composite no");
    }
        for( ;n!=0;n=n/10){
            rev=rev*10+(n%10);
            if(rev%2==0){ 
            printf("rev is not twisted");return 0;
            printf("teisted");
            }
        }


    return 0;
}
---------------------------------------------------------------------------------------------
Find the LCM (Least Common Multiple) of two numbers using a while loop.



Input- Enter two numbers: 10 5

Output-LCM of 10 and 5 is 10


#include<stdio.h>
int main() {
    int i,a,b,gcd;
    printf("enter the numbers:");scanf("%d%d",&a,&b);
    for(i=1;i<=a&&i<=b;i++){
        if(a%i==0&&b%i==0)gcd=i;
    }printf("%d",a*b/gcd);
    return 0;
}
----------------------------------------------------------------------------------------
Calculate the sum of the series 1 - 1/4 + 1/9 - 1/16 + ... + 1/n using a for loop.



Input- 5

Output- 0.8386


#include <stdio.h>

int main() {
    int n,i,j,c=0;
    float s=1;
    printf("enter the num:");scanf("%d",&n);n+=5;
    printf("1-");
    for(i=3;i<=n;i++){
     for(j=1;j<=i;j++){
         if(i%j==0)c++;
        }if(c==2)printf("1/%d+",i,s+=1.0/i);
    }printf("\b=%.2f",s);
    return 0;
}
----------------------------------------------------------------------------------------
 Write the logic for thee below pattern in c ?



    1       2       3 

   6       5       4

   7       8       9

 12      11     10

 13     14     15 

#include<stdio.h>
int main()
{
    int i,j,nr,m=3,a=1,nc;
   printf("enter of rows :");scanf("%d",&nr);
   printf("enter of coloums :");scanf("%d",&nc);
   for(i=1;i<=nr;i++){
      for(j=1;j<=nc;j++)
      {
    if(i%2==0)
    printf("%3d",--a);
    else
    printf("%3d",a++);
      }
      a+=m;
       printf("\n");
   }
     return 0;
}
------------------------------------------------------------------------------------
Write the logic for the below program?



1 

2     6

3     7     10

4     8     11     13

5     9     12     14     15


#include<stdio.h>
int main()
{
     int i,j,r,m,a;
   printf("enter of rows :");scanf("%d",&r);
   for(i=1;i<=r;i++){
       m=i;
       a=r-1;
       for(j=1;j<=i;j++)
       {
           printf("%d",m);
           m+=a;
           a--;
       }
       printf("\n");
   }
     return 0;
}
----------------------------------------------------------------------------

Write the logic for the below program in c ?



                           1

                  4       9

       16     25     36   

49   64     81   100


#include<stdio.h>
int main()
{
    int n,i,j,k=1,s;
    printf("enter the num:");scanf("%d",&n);
    for(i=1;i<=n;i++){
        for(s=1;s<=n-i;s++){
            printf("   ");
        }
        for(j=1;j<=i;j++){
          printf("%3d",k*k);
          k++;
        }
        printf("\n");
    }
     return 0;
}
---------------------------------------------------------------------------------------------------
Write the logic for the below program ?



                       1

              2       4

      3      6       9

4    8    12     16


#include<stdio.h>
int main(){
    int n,i,j,m,s;
    printf("enter the num:");scanf("%d",&n);
    for(i=1;i<=n;i++){
        m=i;
        for(s=1;s<=n-i;s++){
            printf("   ");
        }
        for(j=1;j<=i;j++){
          printf("%3d",m);
          m+=i;
        }
        
        printf("\n");
    }
     return 1;
}
---------------------------------------------------------------------------
Write the logic for the below program in c?



1

1  2   1

1  2   3   2   1

1  2   3   4   3   2   1

1  2   3   4   5   4   3   2   1

#include<stdio.h>
int main()
{
    int n,r,c,m;
    printf("enter rows:");
    scanf("%d",&n);
    for(r=1;r<=n;r++){
        for(c=1;c<=r;c++){
            printf("%d ",c);}
             for(m=r-1;m>=1;m--){
            printf("%d ",m);
        }
        printf("\n");
    }
    
    return 0;
}

----------------------------------------------------------------------------------------------

Write a c program for the following pattern



   1 2 3 4 5

   0 3 4 5 6

   0 0 5 6 7

   0 0 0 7 8

   0 0 0 0 9


#include <stdio.h>
int main()
{
    int n1,n2;
    printf("enter the number : ");
    scanf("%d %d",&n1,&n2);
    for(int i=0;i<=n1;i++)
    {
        for(int j=1;j<=n2;j++)
        {
            if(j<=i)
            {
                printf("0 ");
            }
            else
            {
                printf("%d ",i+j);
            }
        }
        printf("\n");
    }

    return 0;
}
---------------------------------------------------------------------------------------
Write a c program for the following pattern



    1 

    1 * 2

    1 * 2 * 3

    1 * 2 * 3 * 4



#include<stdio.h>
int main(){
    int n,i,j;
    printf("enter the num:");scanf("%d",&n);
    for(i=1;i<=n;i++){
        for(j=1;j<=i;j++){
            printf("%d",j);
            printf("*");
        }
        printf("\b  \n");
    }
    
    return 0;
}
------------------------------------------------------------------------------------------
)   1  

    2  3

    4  5  6 

    7  8  9 10

   11 12 13

   14 15

   16

#include<stdio.h>
int main(){
    int n,i,j,k=1;
    printf("enter the num:");scanf("%d",&n);
    for(i=1;i<=n;i++){
        for(j=1;j<=i;j++){
            printf("%d",k);
            k++;
        }
        printf("\n");
    }
    for(i=n-1;i>=1;i--){
        for(j=1;j<=i;j++){
            printf("%d",k);
            k++;
        }
        printf("\n");
    }
    return 0;
}
-----------------------------------------------------------------------------------------
 1 2 3 4 5

  2 3 4 5 1

  3 4 5 1 2

  4 5 1 2 3

  5 1 2 3 4


#include<stdio.h>
int main(){
    int n,i,j;
    printf("enter the num:");scanf("%d",&n);
    for(i=1;i<=n;i++){
        for(j=i;j<=n;j++){
            printf("%d",j);
        }
        for(j=1;j<=i-1;j++){
            printf("%d",j);
        }
        printf("\n");
    }
    
    return 0;
}
--------------------------------------------------------------------------------------------------

Write a program in C to store elements in an array and print it.

Input 10 elements in the array :

element - 0 : 1

element - 1 : 1

element - 2 : 2

element - 3 : 3

element - 4 : 4

element - 5 : 5

element - 6 : 6

element - 7 : 7

element - 8 : 8

element - 9 : 9

.......

and so on.

Expected Output :

Elements in array are: 1 1 2 3 4 5 6 7 8 9


#include<stdio.h>
#define j 100
int main(){
    int a[j],n,i;
    printf("enter the size :");scanf("%d",&n);
    printf("enter the %d elements:",n);
    for(i=0;i<n;i++)
        scanf("%d ",&a[i]);
    for(i=0;i<n;i++)
        printf("%d",a[i]);
    return 0;
}
------------------------------------------------------------------
Write a program in C to read n number of values in an array and display it in reverse order.

Input the number of elements to store in the array :3

Input 3 number of elements in the array :

element - 0 : 2

element - 1 : 5

element - 2 : 7

Expected Output :

The values store into the array are :

2 5 7

The values store into the array in reverse are :

7 5 2


#include<stdio.h>
int main(){
    int a[100],n,i,t;
    printf("enter the size :");scanf("%d",&n);
    printf("enter the %d elements:",n);
    for(i=0;i<n;i++)
        scanf("%4d",&a[i]);
    for(i=0;i<n/2;i++){
     t=a[i];
     a[i]=a[n-i-1];
     a[n-i-1]=t;
    }
    printf("reverse elements:");
    for(i=0;i<n;i++)printf("%4d",a[i]);
    return 0;
}
----------------------------------------------------------------
Write a program in C to find the sum of all elements of the array.

Input the number of elements to be stored in the array :3

Input 3 elements in the array :

element - 0 : 2

element - 1 : 5

element - 2 : 8

Expected Output :

Sum of all elements stored in the array is : 15


#include<stdio.h>
int main(){
    int a[100],n,i,sum=0;
    printf("enter the size :");scanf("%d",&n);
    printf("enter the %d elements:",n);
    for(i=0;i<n;i++)scanf("%d",&a[i]);
    for(i=0;i<n;i++) printf("element-%d:%d\n",i,a[i]);
    for(i=0;i<n;i++)sum+=a[i];
    printf("sum of the elements:");
    printf("%d",sum);
    return 0;
}
-----------------------------------------------------------------------------
Write a program in C to print separately the  odd and even integers 

Test Data :

Input the number of elements to be stored in the array :5

Input 5 elements in the array :

element - 0 : 25

element - 1 : 47

element - 2 : 42

element - 3 : 56

element - 4 : 32

Expected Output :

The Even elements are :

42 56 32

The Odd elements are :

25 47

#include<stdio.h>
int main(){
    int a[100],n,i;
    printf("enter the size :");scanf("%d",&n);
    printf("enter the %d elements:",n);
    for(i=0;i<n;i++){
    scanf("%d",&a[i]);
    printf("element-%d:%d\n",i,a[i]);
    }
    printf("even numbers:");
    for(i=0;i<n;i++){
        if(a[i]%2==0)printf("%d",a[i]);
    }
    printf("\nodd numbers:");
    for(i=0;i<n;i++){
        if(a[i]%2!=0)printf("%d",a[i]);
    }
    return 0;
}
------------------------------------------------
Write a C program to store some integers in an array and print all the prime numbers available in that array



Input as :

1 2 3 4 5

Output as :

2 3 5


#include<stdio.h>
int main() {
 int a[100],n,i,j,c;
    printf("enter the size :");scanf("%d",&n);
    printf("enter the %d elements:",n);
    for(i=0;i<n;i++)scanf("%d",&a[i]);
    printf("prime numbers are:");
    for(i=0;i<n;i++){
        for(c=0,j=1;j<=a[i];j++){
        if(a[i]%j==0)
            c++;
        }
            if(c==2)printf("%2d",a[i]);
    }
return 0;
}
--------------------------------------------------------------

Write a C program to Sort the array in ascending order and print it.



Input as :

Enter array size : 6

Enter 6 element : 4 3 5 6 2 1



Output as :

After sorting in ascending order :

1 2 3 4 5 6

#include<stdio.h>
int main() {
    int a[100],n,i,j,t;
    printf("enter the size of the array:");scanf("%d",&n);
    printf("enter the %d elements",n);
    for(i=0;i<n;i++){
        scanf("%3d",&a[i]);
        printf("\n%d",a[i]);
    }
    for(i=0;i<=n-2;i++){
    for(j=i+1;j<=n-1;j++){
     if(a[i]>a[j]){
         t=a[i];
        a[i]=a[j];
        a[j]=t;
     }
    }
    }
    printf("sorted elements:");
    for(i=0;i<n;i++)printf("%3d",a[i]);
    return 0;
}
---------------------------------------------------------------
Write a C program to Sort the array in descending order and print it.



Input as :

Enter array size : 6

Enter 6 element : 4 3 5 6 2 1



Output as :

After sorting in ascending order :

6 5 4 3 2 1


#include<stdio.h>
int main() {
    int a[100],n,i,j,t;
    printf("enter the size of the array:");scanf("%d",&n);
    printf("enter the %d elements",n);
    for(i=0;i<n;i++){
        scanf("%3d",&a[i]);
        printf("\n%d",a[i]);
    }
    for(i=0;i<=n-2;i++){
    for(j=0;j<n-i-1;j++){
     if(a[j]<a[j+1]){
         t=a[j];
        a[j]=a[j+1];
        a[j+1]=t;
     }
    }
    }
    printf("sorted elements:");
    for(i=0;i<n;i++)printf("%3d",a[i]);
    return 0;
}
----------------------------------------------------------------------

Write a C program to find the element given by user is present in the 

array or not 

If the element is present in the array also programmer have to print 

index position of that searching element.

If the user pass the element for searching in the array is not present

then also provide a appropriate message to the user that element is not 

present inside the array.



Input 1:-

[1,2,3,4,5,6,7]



Enter the number you want to search : 5



Output :-



The element which you have sreached is present inside the 4rth index 



Input 2:-

[1,2,3,4,3,6]



Enter the number you want to search : 9



Output :



The element which you have sreached is not present inside the Array.


#include<stdio.h>
int main() {
    int a[100],n,i,ele,f;
    printf("enter the size of the array:");scanf("%d",&n);
    printf("enter the %d elements:",n);
    for(i=0;i<n;i++){
        scanf("%3d",&a[i]);
        printf("\n%d",a[i]);
    }
    printf("\nenter the element to search:");scanf("%d",&ele);
    for(i=0;i<n;i++){
     if(a[i]==ele){
         printf("%d in %dth index",ele,i);
         f=1;
     }
    }
    if(f==0)printf("%d not found",ele);
    return 0;
}
--------------------------------------------------------
Write a C program to find the min element from an array.



Input as :

Enter array size : 5

Enter 5 elements : 4 5 3 6 2

Min element is : 2



#include<stdio.h>
int main() {
    int a[100],n,i,min;
    printf("enter the size of the array:");scanf("%d",&n);
    printf("enter the %d elements",n);
    for(i=0;i<n;i++){
        scanf("%3d",&a[i]);
        printf("%3d",a[i]);
    }min=a[0];
    for(i=0;i<n;i++){
    if(min>a[i])min=a[i];
    }
    printf("\nmin ele:%d",min);
    return 0;
}
-----------------------------------------------------------
Write a C program to find the max element from an array.



Input as :

Enter array size : 5

Enter 5 elements : 4 5 3 6 2

Man element is : 6




#include<stdio.h>
int main(){
    int a[100],n,i,max;
    printf("enter the size of the array:");scanf("%d",&n);
    printf("enter the %d elements",n);
    for(i=0;i<n;i++){
        scanf("%3d",&a[i]);
        printf("%3d",a[i]);
    }max=a[0];
    for(i=0;i<n;i++){
    if(max<a[i])max=a[i];
    }
    printf("\nmax ele:%d",max);
    return 0;
}
---------------------------------------------------------------
Write a program in C to find the second smallest element in an array. 

Test Data :

Input the size of array : 5

Input 5 elements in the array (value must be <9999) :

element - 0 : 0

element - 1 : 9

element - 2 : 4

element - 3 : 6

element - 4 : 5

Expected Output :

The Second smallest element in the array is : 4


#include<stdio.h>
int main(){
    int a[100],n,i,j,t,min=2;
    printf("enter the size of the array:");scanf("%d",&n);
    printf("enter %d elements:",n);
    for(i=0;i<n;i++)
     scanf("%d",&a[i]);
    for(i=0;i<n-1;i++){
        for(j=i+1;j<n;j++){
            if(a[i]>a[j]){
                t=a[i];
                a[i]=a[j];
                a[j]=t;
            }
        }
    }
    for(i=0;i<n;i++)printf("%4d",a[i]);
   printf("\nsecond smallest element:"); 
   for(i=1;i<n;i++){
       if(a[i]>a[i-1])min--;
       if(min==1){printf("%d",a[i]);break;
       }
   }
return 0;    
}
----------------------------------------------------------------------------------
Write a program in C to find the nth largest element in an array. 



Test Data :

Input the size of array : 5

Input 5 elements in the array :

element - 0 : 2

element - 1 : 9

element - 2 : 1

element - 3 : 4

element - 4 : 6



Enter nth largest : 3

Expected Output :

The 3 largest element in the array is : 4


#include<stdio.h>
int main() {
  int a[100],n,i,j,t,max;
    printf("enter the size of the array:");scanf("%d",&n);
    printf("enter %d elements:",n);
    for(i=0;i<n;i++)
     scanf("%d",&a[i]);
    for(i=0;i<n-1;i++){
        for(j=i+1;j<n;j++){
            if(a[i]>a[j]){
                t=a[i];
                a[i]=a[j];
                a[j]=t;
            }
        }
    }
    for(i=0;i<n;i++)printf("%d",a[i]);
    printf("enter the nth lagest:");scanf("%d",&max);
    printf("%d max=",max);
    for(i=n-2;i>=0;i--){
        if(a[i]<a[i+1])max--;
        if(max==1){printf("%d",a[i]);break;}
    }
    
return 0;    
}
------------------------------------------------------------------
Write a program in C to merge two arrays of same size sorted in descending order. 

Test Data :

Input the number of elements to be stored in the first array :3

Input 3 elements in the array :

element - 0 : 1

element - 1 : 2

element - 2 : 3

Input the number of elements to be stored in the second array :3

Input 3 elements in the array :

element - 0 : 1

element - 1 : 2

element - 2 : 3

Expected Output :

The merged array in descending order is :

3 3 2 2 1 1

#include<stdio.h>
int main() {
   int a[100],b[100],s1,s2,i,j,t;
    printf("enter the size of first and second the array:");scanf("%d%d",&s1,&s2);
    printf("enter %d elements for  first array :",s1);
    for(i=0;i<s1;i++)
     scanf("%d",&a[i]);
     printf("enter %d elements for second array :",s2);
     for(i=0;i<s2;i++)
     scanf("%d",&b[i]);
    for(i=0;i<s2;i++)
       a[s1+i]=b[i];
    for(i=0;i<s1+s2-1;i++){
         for(j=i+1;j<s1+s2;j++){
            if(a[i]>a[j]){
                t=a[i];
                a[i]=a[j];
                a[j]=t;
                }
         }
    }
                for(i=0;i<s1+s2;i++)printf("%4d",a[i]);
    
return 0;    
}
------------------------------------------------------------
Write a program in C to separate odd and even integers in separate arrays. 

Test Data :

Input the number of elements to be stored in the array :5

Input 5 elements in the array :

element - 0 : 25

element - 1 : 47

element - 2 : 42

element - 3 : 56

element - 4 : 32

Expected Output :

The Even elements are :

42 56 32

The Odd elements are :

25 47

#include<stdio.h>
int main() {
 int a[100],n,i,j;
    printf("enter the size of the array:");scanf("%d",&n);
    printf("enter %d elements:",n);
    for(i=0;i<n;i++){
     scanf("%d",&a[i]);
     printf("elements-%d:%d\n",i,a[i]);
    }
     printf("the even elements are:");
    for(i=0;i<n;i++){
            if(a[i]%2==0)printf("%4d",a[i]);
        }
    printf("\nthe odd elements are:");
    for(i=0;i<n;i++){
            if(a[i]%2!=0)printf("%4d",a[i]);
    }
return 0;    
}
----------------------------------------------------------------
Write a program in C to count a total number of duplicate elements in an array.

Input the number of elements to be stored in the array :6

Input 6 elements in the array :

element - 0 : 5

element - 1 : 1

element - 2 : 1

element - 3 : 6

element - 4 : 3

element - 5 : 5

.....................



Expected Output :

Total number of duplicate elements found in the array is : 2




#include<stdio.h>
int main() {
    int a[100],n,i,j,f=0;
  printf("enter the size of the array:");scanf("%d",&n);
    printf("enter %d elements:",n);
    for(i=0;i<n;i++){
     scanf("%d",&a[i]);
     printf("elements-%d:%d\n",i,a[i]);
    }
    for(i=0;i<n;i++){
        for(j=i+1;j<=n-1;j++){
            if(a[i]==a[j]){
                f++;
           
        }
0
        }
    }printf("%d",f);
 if(f==0)printf("not found");
return 0;    
}
----------------------------------------------------------------------------------------
Write a program in C to print all unique elements in an array. 

Test Data :

Print all unique elements of an array:

------------------------------------------

Input the number of elements to be stored in the array: 4

Input 4 elements in the array :

element - 0 : 3

element - 1 : 2

element - 2 : 2

element - 3 : 5

Expected Output :

The unique elements found in the array are:

3 5

#include<stdio.h>
int main() {
    int a[100],n,i,j,f;
  printf("enter the size of the array:");scanf("%d",&n);
    printf("enter %d elements:",n);
    for(i=0;i<n;i++){
     scanf("%d",&a[i]);
     printf("elements-%d:%d\n",i,a[i]);
    }
        for(i=0;i<n;i++){
            f=0;
        for(j=0;j<n;j++){
            if(a[i]==a[j])
             f++;   
        }
        if(f==1)printf("%d",a[i]);
    }
return 0;    
}
--------------------------------------------------------------------------------------------
Write a program in C to count the frequency of each element of an array.

Test Data :

Input the number of elements to be stored in the array :6

Input 6 elements in the array :

element - 0 : 25

element - 1 : 12

element - 2 : 43

element - 3 : 43

element - 4 : 25

element - 5 : 15

Expected Output :

The frequency of all elements of an array :

25 occurs 2 times

12 occurs 1 times

43 occurs 2 times

15 occurs 1 times




#include<stdio.h>
            int main() {
    int n,i,c,a[100],f[100],j;
    printf("enter size of array:");
    scanf("%d",&n);
    for(i=0;i<n;i++){
    printf("\nenter %d elements:",n);
    scanf("%d",&a[i]);
    f[i]=-1;
    }
    for(i=0;i<n;i++){
        c=1;
        for(j=i+1;j<n;j++){
        if(a[i]==a[j]){
            c++;
            f[j]=0;
        }
    }
    if(f[i]!=0)
    f[i]=c;}
    
    for(i=0;i<n;i++){
    if(f[i]!=0)
    printf("\n%2d occurs %2d times:",a[i],f[i]);
    }
return 0;    
}
-----------------------------------------------------------------------
Write a program in C to insert New value in the array (sorted array ) at its proper respective position as its accending order.

 

Test Data : 

Input the size of array : 5 



Input 5 elements in the array : 

element - 0 : 1 

element - 1 : 3 

element - 2 : 7

element - 3 : 8

element - 4 : 10

Input the value to be inserted : 6



Expected Output : 

The current list of the array : 

1 3 7 8 10



After Insert the element the new list is : 

1 3 6 7 8 10

#include<stdio.h>
int main(){
 int a[100],n,i,pos,ele;
  printf("enter the size of the array:");scanf("%d",&n);
    printf("enter %d elements:",n);
    for(i=0;i<n;i++){
     scanf("%d",&a[i]);
     printf("elements-%d:%d\n",i,a[i]);
    }
    printf("enter new ele and its position:");scanf("%d %d",&ele,&pos);
    if(pos<1||pos>n+1){
        printf("position 1 to %d only",n+1);
    }else{
        for(i=n;i>=pos;i--)
        a[i]=a[i-1];
        a[i]=ele;
    printf("elements");    
      for(i=0;i<=n;i++)printf("%4d",a[i]);
    }
return 0;    
}
---------------------------------------------------------------------------------------
Write a program in C to delete an element at desired position from an array. 



Test Data : 

Input the size of array : 5 

Input 5 elements in the array in ascending order: 

element - 0 : 1 

element - 1 : 2 

element - 2 : 3 

element - 3 : 4 

element - 4 : 5 



Input the position which to delete: 3 

Expected Output : 

The new list is : 1 2 4 5 


#include<stdio.h>
int main() {
 int a[100],n,i,ele,f,j;
  printf("enter the size of the array:");scanf("%d",&n);
    printf("enter %d elements:",n);
    for(i=0;i<n;i++){
     scanf("%d",&a[i]);
     printf("elements-%d:%d\n",i,a[i]);
    }
    printf("enter ele to be:");scanf("%d",&ele);
        for(i=0;i<n;i++){
       if(a[i]==ele){
        n--;
        f=1;
        for(j=i;j<n;j++)
        a[j]=a[j+1];
        i--;}
        }
        if(f==0)printf("%d not found",ele);
        else{
    printf("elements");    
      for(i=0;i<n;i++)printf("%4d",a[i]);
    }
return 0;    
}
------------------------------------------------------------------------------
Write a C program to remove all occurrences of a specific element from a given array of integers. The program should display the resulting array after removing the element.



Test Data :

Input the size of array : 10

Input 10 elements in the array : 

3 2 5 6 2 7 9 2 2 1



Input the element that you want to delete: 2



Expected Output : 

The new list is : 3 5 6 7 9 1


#include<stdio.h>
int main() {
    int n,i,a[100],val;
    printf("enter the size of the array:");
    scanf("%d",&n);
    printf("input %d elements in the array in ascending order:\n",n);
    for(i=0;i<n;i++){
        printf("element-%d:",i);
        scanf("%d",&a[i]);
    }
     printf("input the element which to delete:");
    scanf("%d",&val);
     for(i=0;i<n;i++){
          if(a[i]!=val)
          printf("%d\t",a[i]);
         }
return 0;    
}
---------------------------------------------------------------------------------------------
–
Write a C program that finds pairs in an array whose sum is 15.



Test Data :



Input the size of array : 12

Input 8 elements in the array :

2 4 6 7 8 9 10 11 12 13 14 16



Expected output :

(2, 13)

(4, 11)

(6, 9)

(7, 8)


#include<stdio.h>
int main(){
    int a[100],n,i,j;
    printf("enter the size of the array:");scanf("%d",&n);
    printf("input %d elements in the array:",n);
    for(i=0;i<n;i++)scanf("%d",&a[i]);
    for(i=0;i<=n-1;i++){
        for(j=i+1;j<n;j++){
            if(a[i]+a[j]==15)printf("(%d,%d)\n",a[i],a[j]);
        }
    }
    return 0;
}
-------------------------------------------------------------------
Write a C program that prints the elements of a given array in a specific format. The program should take an array as input and display the array elements in pairs, with each pair consisting of the first and last elements, followed by the second and second-to-last elements, and so on. If the array has an odd number of elements, the middle element should be printed alone.



For example, given the array: [2, 5, 1, 6, 7, 9, 8, 3], the expected output should be:



2 3

5 8

1 9

6 7




#include<stdio.h>
int main(){
    int a[100],n,i,j;
    printf("enter the size of the array:");scanf("%d",&n);
    printf("input %d elements in the array:",n);
    for(i=0;i<n;i++)scanf("%d",&a[i]);
    for(i=0,j=n-1;i<n/2&&j>=n/2;i++,j--){
            printf("(%d,%d)\n",a[i],a[j]);
    }
    return 0;
}
-----------------------------------------------------------------------
Write a C program that rearranges the elements of a given array by moving all the zeros to the front. The program should take an array as input and swap the positions of non-zero elements with zeros, such that all the zeros appear at the beginning of the array, while maintaining the relative order of non-zero elements.



For example: 

given the input array: [1, 0, 2, 0, 4, 5, 0, 3, 0]

Expected output:

1 2 4 5 3 0 0 0 0

#include<stdio.h>
int main(){
 int a[100],n,i,t,j;
    printf("enter the size of the array:");scanf("%d",&n);
    printf("input %d elements in the array:",n);
    for(i=0;i<n;i++)scanf("%d",&a[i]);
    for(i=0;i<=n-1;i++){
           for(j=i+1;j<n;j++){
               if(a[i]==0){
                   t=a[i];
                   a[i]=a[j];
                   a[j]=t;
               }
               
           }
            printf("%d",a[i]);   
           }
    
return 0;    
}
---------------------------------------------------------------------------
Write a C program to find and print all the missing elements that are not present in a given array. Given an array of integers, your task is to identify and print all the numbers that are missing within a specified range.



For example:

given the input array arr = [1, 4, 7, 12, 17] 

Expected output as : 2 3 5 6 8 9 10 11 13 14 15 16



#include<stdio.h>
int main(){
  int a[100],n,i,j,m;
    printf("enter the size of the array:");scanf("%d",&n);
    printf("input %d elements in the array:",n);
    for(i=0;i<n;i++)scanf("%d",&a[i]);
    for(i=0;i<n;i++){
        m=a[i];
        m++;
        for(j=i+1;m<a[j];){
            printf("%4d",m++);
        }
    }  
return 0;    
}
----------------------------------------------------------------------
Write a C program that modifies a given array in a wave pattern and prints the resulting array. The wave pattern requires that the previous element in the array must be greater than the next element, and the next element must be greater than the previous element.



For example, consider the input array arr = {1, 2, 3, 4, 5}

resulting in the array 2 1 4 3 5.


#include<stdio.h>
int main(){
 int a[100],n,i,j,t;
    printf("enter the size of the array:");scanf("%d",&n);
    printf("input %d elements in the array:",n);
    for(i=0;i<n;i++)scanf("%d",&a[i]);
    for(i=0,j=i+1;i<n&&j<n;i+=2,j+=2){
           t=a[i];
           a[i]=a[j];
           a[j]=t;
        } 
    printf("resulting array:");
    for(i=0;i<n;i++)printf("%d",a[i]);
return 0;    
}
----------------------------------------------------------------------------------------

Write a C program to count the number of alphabet present in a given String .

Input as : Apple

Output as : The count of alphabet is : 5

#include<stdio.h>
int main() {
    int i,strlen;
    char s[100];
 printf("enter the string:");scanf("%s",s);
 for(i=0;s[i]!='\0';i++);
 strlen=i;
 printf("length=%d",strlen);
return 0;    
}
----------------------------------------------------------------------------
Write a C program to print the reverse of a given String 

Input as :

Enter a String : NareshIT



Output as : 

The reverse of the String is : TIhseraN


#include<stdio.h>
int main() {
int i,strlen;
    char s[100];
 printf("enter the string:");scanf("%s",s);
 for(i=0;s[i]!='\0';i++);
 strlen=i;
 for(i=strlen;i>=0;i--)
 printf("%c",s[i]);
return 0;    
}
--------------------------------------------------------------------------------------
Write a C program to count the Count the vowel, Consonant, Digit and Special Character in a given String .

Input as : 

Enter a String : Nareshit @123

Output as :

Vowel count is : 3

Consonant count is : 5

Digit count is : 3

Special Character count is : 1

#include<stdio.h>
int main() {
    char s[100];
    int i,v,c,d,sp;
  printf("enter the string:");scanf("%s",s);
  for(i=v=c=sp=d=0;s[i]!='\0';i++){
      if(s[i]>='A'&&s[i]<='Z')s[i]+=32;
      if(s[i]>='a'&&s[i]<='z'){
      if(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u') v++; else c++;    
      }else if(s[i]>='0'&&s[i]<='9'){
      d++;
      }else{
           sp++;
      }
  }
  printf("vowel :%d\n consonant:%d\n digit:%d\n special character :%d\n",v,c,d,sp);
return 0;    
}
-----------------------------------------------------------------------
Write a C program to check is the String contains any vowel or not.



Input as : 

Enter a String : Apple

Output as : 

This String contains vowel.



Input as : 

Enter a String : Rhythm

Output as : 

There is no vowel present in this String.



#include<stdio.h>
int main() {
 char s[100];
    int i,v,c;
  printf("enter the string:");scanf("%s",s);
  for(i=v=c=0;s[i]!='\0';i++){
      if(s[i]>='A'&&s[i]<='Z')s[i]+=32;
      if(s[i]>='a'&&s[i]<='z'){
      if(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u') v++; else c++;
      }
  }
(v>0)?printf("the contains vowel"):printf("there is no vowel present in the string");
return 0;    
}
---------------------------------------------------------------------------
Write a C program to sort the string data and print it.

Input as : 

Enter a String : apple

Output as : 

After Sorting the String is : aelpp




#include<stdio.h>
int main() {
 char s[100];
    int i,j,t;
  printf("enter the string:");scanf("%s",s);
  for(i=0;s[i]!='\0';i++){
      if(s[i]>='A'&&s[i]<='Z')s[i]+=32;
      if(s[i]>='a'&&s[i]<='z'){
      for(j=i+1;s[j]!='\0';j++){
         if(s[i]>s[j]){
          t=s[i];
          s[i]=s[j];
          s[j]=t;
         }
      }
      }
  }
  for(i=0;s[i]!='\0';i++)
  printf("%c",s[i]);
  return 0;
}
------------------------------------------------------------------------------------------
Write a c program to check the String is Palindrome  or Not 
#include<stdio.h>
#include<string.h>
#include<ctype.h>
int main()
{
    int i,j;
    char s[100];
    printf("enter the string:");scanf("%s",s);
    for(i=0;s[i]!=0;i++);
        for(j=0;j<i/2;j++){
    if(tolower(s[i-j-1])!=tolower(s[j]))
        printf("not a palindrome");
        }
printf("palindrome");
    return 0;
}
-----------------------------------------------------------------------------
Write a c Program to check whether two given strings are anagram of each other or not.



input 1:- listen

input 2:- silent



this are anagram String



_______



input 1:- Jack

input 2:- Jake

this is not are anagram String

#include<stdio.h>
#include<string.h>
int main()
{
    int i, j,l1,l2,c;
    char s[100],a[100];
    printf("enter the string:");
    scanf("%s",s);
    printf("enter the string:");
    scanf("%s",a);
    l1=strlen(s);
    l2=strlen(a);
    if(l1==l2){
    for(i=0;i<l1;i++){
    for(j=0;j<l2;j++){
        if(s[i]==a[j]){
           c++;
           break;
        }
    }
    }
    }
    if(c==l1&&c==l2)printf("anagram");else printf("not a anagram");
    return 0;
}
-------------------------------------------------------------------------------------
Write a c program to print all the frequency of character present



For Example:-

String s=" Hello Everyone"



Output as :-



The frequency of H is 1

The frequency of e is 3

The frequency of l is 2

The frequency of o is 2

The frequency of   is 1  --------THIS IS FOP CHECKING THE SPACE COUNT 

The frequency of E is 1

The frequency of v is 1

The frequency of r is 1

The frequency of y is 1

The frequency of n is 1
#include<stdio.h>
#include<string.h>
int main()
{
    int i,j,c,l1;
    char s[100];
    printf("enter the string:");scanf("%[^\n]",s);
    l1=strlen(s);
    for(i=0;i<l1;i++){
        c=1;
        if(s[i]!=-1){
        for(j=i+1;j<l1;j++){
            if(s[i]==s[j]){
            c++;
            s[j]=-1;
            }
            
        }
        printf("the frequency of %c is %d\n",s[i],c);
        }
        
    }
    return 0;
}
----------------------------------------------------------
Write a c program to sort the String in ascending order ,after sorting print the result in string

format? 



Input as :- "CoreJava"



output as:-

Before sorting the array

CoreJava



After sorting the array

CJaaeorv

#include<stdio.h>
int main()
{
 char s[100];
    int i,j,t;
  printf("enter the string:");scanf("%s",s);
  for(i=0;s[i]!='\0';i++){
      if(s[i]>='A'&&s[i]<='Z'){
        for(j=i+1;s[j]!='\0';j++){
         if(s[i]>s[j]){
          t=s[i];
          s[i]=s[j];
          s[j]=t;  
      }
        }
      }
      if(s[i]>='a'&&s[i]<='z'){
      for(j=i+1;s[j]!='\0';j++){
         if(s[i]>s[j]){
          t=s[i];
          s[i]=s[j];
          s[j]=t;
         }
      }
      }
  }
  for(i=0;s[i]!='\0';i++)
  printf("%c",s[i]);
    return 0;
}
-----------------------------------------------------------
Write a c program to sort the String in Descending Order  ,after sorting print the result in string

format?  



Input as :- "CoreJava"



Before sorting the array

CoreJava



After sorting the array

vroeaaJC

#include<stdio.h>
int main()
{
    char s[100];
    int i,j,t,strlen;
  printf("enter the string:");scanf("%s",s);
  for(i=0;s[i]!='\0';i++);strlen=i;
  for(i=0;s[i]!='\0';i++){
      if(s[i]>='A'&&s[i]<='Z'){
        for(j=i+1;s[j]!='\0';j++){
         if(s[i]>s[j]){
          t=s[i];
          s[i]=s[j];
          s[j]=t;  
      }
        }
      }
      if(s[i]>='a'&&s[i]<='z'){
      for(j=i+1;s[j]!='\0';j++){
         if(s[i]>s[j]){
          t=s[i];
          s[i]=s[j];
          s[j]=t;
         }
      }
      }
  }
  for(i=strlen-1;i>=0;i--)
  printf("%c",s[i]);
    return 0;
}
-----------------------------------------------------------------

Write a C program to combine two string in a single String.



Input as :

Enter first String : Naresh

Enter Second String : it



Expected output :

Resulting String is : Nareshit


#include<stdio.h>
#include<string.h>
int main() {
    char s[100],a[100];
    int l1,l2,i;
printf("enter the 1st string:");scanf("%s",s);
printf("enter the 2st string:");scanf("%s",a);
l1=strlen(s);
l2=strlen(a);
for(i=0;i<l2;i++)
s[l1+i]=a[i];
for(i=0;i<l1+l2;i++)printf("%c",s[i]);
return 0;
}
-------------------------------------------------------
Write a C program to remove given character from a String.



Input as : 

Enter a String : Bookstore

Enter the character you want to remove : o



Expected Output : 

Resulting String is : Bkstre


#include<stdio.h>
#include<string.h>
int main() {
    char s[100];
    char ch;
    int l1,i,j;
printf("enter the 1st string:");scanf("%s",s);
printf("enter the character:");scanf(" %c",&ch);
l1=strlen(s);
for(i=0;i<l1;i++){
    if(s[i]==ch){
        l1--;
        for(j=i;j<l1;j++)
        s[j]=s[j+1];
        i--;
    }
}
for(i=0;i<l1;i++)printf("%c",s[i]);

return 0;
}
----------------------------------------------------------------
Write a C program to remove all the Spaces from a given String.



Input as : 

Enter a String : Black cat on a mat



Expected output : Blackcatonamat


#include<stdio.h>
#include<string.h>
int main() {
    char s[100];
    int l1,i,j;
printf("enter the 1st string:");gets(s);
l1=strlen(s);
for(i=0;i<l1;i++){
    if(s[i]==' '){
        l1--;
        for(j=i;j<l1;j++)
        s[j]=s[j+1];
        i--;
    }
}
for(i=0;i<l1;i++)printf("%c",s[i]);

return 0;
}
------------------------------------------------------------
Write a C program to convert all the character to upper case 

from a given index to end index. If the given index is not available then print

Index is not available.



Input as :

Enter a String : I am a student

Enter the starting index number : 4

Enter the ending index number : 13



Expected output :

Resulting String is : I am A STUDENT




#include<stdio.h>
#include<string.h>
int main() {
 char s[100];
 int i,start,end,l;
 printf("enter a string:");
 scanf("%[^\n]",s);
 l=strlen(s);
 printf("enter  the starting index number:");
 scanf("%d",&start);
 printf("enter  the ending index number:");
 scanf("%d",&end);
 if(l>=end && l>=start)
 {
 for(i=0;i<l;i++){
     if(start<=i  && end>=i){
     s[i]-=32;
    
 }
 }
 printf("%s",s);
 }
else
 printf("index out of range");

return 0;
}



#include<stdio.h>
int main() {
int i,st,en,l1;
char a[100];
printf("enter a string:");
scanf("%[^\n]",a);
l1=strlen(a);
printf("Enter the starting index number :");
scanf("%d",&st);
printf("Enter the ending index number :");
scanf("%d",&en);
if(a[i]==' '){
    i++;
}else{
for(i=st-1;i<en-1;i++)
{
if(a[i]>='a'&&a[i]<='z')
a[i]-=32;
}
}
printf("resulting string is:");
for(i=0;i<l1;i++)
printf("%c",a[i]);
return 0;
}
------------------------------------------------------------
Write a C program to check the given string contains a capital

alphabet, small alphabet, special character and digit.



Input as : 

Enter a String : Nareshit@123



Expected output :

The given String is matching to our cases.



Input as : 

Enter a String : nareshit



Expected output :

The given String is not matching to our cases.

#include<stdio.h>
#include<string.h>
int main() 
{
  int i,l,sm=0,up=0,d=0,sp=0;
  char s[100];
  printf("enter a string:");
 scanf("%[^\n]",s);
  l=strlen(s);
    for(i=0;i<l;i++)
    {
      if(s[i]>='a'&&s[i]<='z')
      {
          sm=1;
      }
      else if(s[i]>='A'&&s[i]<='Z')
      {
          up=1;
      }
      else if(s[i]>='0'&&s[i]<='9')
      {
          d=1;
      }
      else
      sp=1;
  }
  if(sm==1 && up==1 && d==1 && sp==1)
  {
       printf("the given string is  matching to our cases");
  }
else{
    printf("the given string is not matching to our cases");
}
return 0;
}
-------------------------------------------
Create a program that compresses a string by replacing repeated characters with a count of the repetition (e.g., "aaabbbcc" becomes "a3b3c2").



Input as : 

Enter a String : aaabbccdae



Output as : 



Resulting string is : a4b2c2


#include<stdio.h>
#include<string.h>
int main() {
    char s[100];
    int i,j,c,l1;
printf("emter the string:");scanf("%s",s);
l1=strlen(s);
printf("Resulting string is:");
for(i=0;i<l1-1;i++){
    c=1;
    if(s[i]!=-1){
    for(j=i+1;j<l1;j++){
        if(s[i]==s[j]){
        c++;
        s[j]=-1;
        }
    }
    if(c>1)
    printf("%c%d",s[i],c);
}
}

return 0;    
}
------------------------------------------------------------------
Check the given String is palindrome or not.



Input as : 

Enter a String : radar



Output as : 

radar is a palindrome string.


#include<stdio.h>
int main() {
    int i,j;
    char s[100];
   printf("enter the string:");scanf("%s",s);
   for(i=0;s[i]!='\0';i++);
   for(j=0;j<i/2;j++){
     if(s[i-j-1]!=s[j])
     printf("not a palindrome");
   }
     printf("palindrome");
return 0;    
}
-------------------------------------------------------------
Write a program to find and count all palindromic substrings in a given string.



Input as : 

Enter a String : madam



Output as : 



Palindromic substring : madam

Palindromic substring : ada

Total palindromic substrings are : 2


#include<stdio.h>
#include<string.h>
int main() {
  char s[100];
  int c,l;
  printf("enter string\n");scanf("%[^\n]s",s);
  l=strlen(s);
  for(int i=0;i<l;i++){
      for(int j=i+1;j<l;j++){
          int start =i,end =j;
          int flag=1;
          while(start<end){
              if(s[start]==s[end]){
                  flag=1;
              }else{
                  flag=0;
                  break;
              }
              start++;
              end--;
          }
          if(flag==1) {
              c++;
              for(int k=i;k<=j;k++){
                  printf("%c",s[k]);
              }printf("\n");
             
          }
      } 
}
  printf("\ntotal palindromic substrings are:%d\n",c);
  
  
return 0;
}
-------------------------------------------------------------------
Write a C program to find out the sum of the numbers which is present in a given string.



Input as : 

Enter a String : TS12ab345



Output as : 



Sum Of the numbers is : 15


#include<stdio.h>
int main() {
    int i,sum=0;
    char s[100];
  printf("enter the string:");scanf("%s",s);
  for(i=0;s[i]!='\0';i++){
      if(s[i]>='0'&&s[i]<='9')
      sum+=(s[i]-'0');
  }
  printf("%d",sum);
return 0;    
}
-------------------------------------------------------------------
Write a C program to convert each word first alphabet to Upper case.



Input as : 

Enter a String : i am a student of nareshit



Output as : 



Sum Of the numbers is : I Am A Student Of Nareshit


#include<stdio.h>
int main() {
    char s[100];
    int i;
  printf("enter the string:");
  scanf("%[^\n]",s);
  if(s[0]>='a'&&s[0]<='z')s[0]-=32;
  for(i=1;s[i]!='\0';i++){
      if(s[i]==' '&&s[i+1]!=' '&&s[i+1]>='a'&&s[i+1]<='z')s[i+1]-=32;
      else if(s[i]!=' '&&s[i+1]>='A'&&s[i+1]<='Z')s[i+1]+=32;
  }
  for(i=0;s[i]!='\0';i++)
  printf("%c",s[i]);
return 0;    
}
---------------------------------------------------------------
char str1[] = “abca”;
char str2[] = “abc”;
int result = strcmp(str1, str2);
printf(“%d”, result);



a)97


b)1


c)-1


d)0

Question: 2
Predict the output of below code:

char s1[10]=”hello”,s2[10]=” world”;

printf(“%s”,strcpy(s2,strcat(s1,s2)));



a)Hello World


b)Wprld


c)WorldHello


d)Hello

Question: 3
What is the output?

int main()
{
char str[]={‘B’,’M’,’E’,’\0’};

printf(“%s”,str);
return 0;
}



BME


BME with garbage value at the end


BME\0


error

Question: 4
What will be the output of the program ?

int main()
{
char str[] = “India\0\BIX\0”;
printf(“%d\n”, strlen(str));
return 0;
}



a.10


b.6


c.5


d.1

Question: 5
int items[3][5] =
{ {0, 1, 3, 4},
{4, 3, 99, 0, 7 },
{3, 2} } ;



a) items[1][2] = 77;


b) items[2][1] = 77;


c) items[ 99 ] = 77;


d) items[2][3] = 77;

Question: 6
What will be the output of the program ?

int main()
{
int i;
char a[] = “\0”;
if(printf(“%s”, a))
printf(“The string is empty\n”);
else
printf(“The string is not empty\n”);
return 0;
}



a.The string is empty


b.The string is not empty


c.No output


d.0

Question: 7
What will be the output of the program ?

int main()
{
printf(“%d\n”, strlen(“123456”));
return 0;
}



a.6


b.12


c.7


d.2

Question: 8
What is the output of the following code?

char str1[20] = “Hello”;
char str2[20];
strcpy(str2, str1);
printf(“%s”, str2);



Hello


Hel


H


Compiler Error

Question: 9
What will be the output of the following C code?

void main()
{
    int a[2][3] = {1, 2, 3, 4, 5};
    int i = 0, j = 0;
    for (i = 0; i < 2; i++)
    for (j = 0; j < 3; j++)
    printf("%d", a[i][j]);
}


a)1 2 3 4 5 0


b) 1 2 3 4 5 1


c) 1 2 3 4 5 5


d) Run time error

Question: 10
What is the value of arr[1][2] in the following 2D array?

Copy code
int arr[3][4] = {{1, 2, 3, 4}, {5, 6, 7, 8}, {9, 10, 11, 12}};



A. 1


B. 2


C. 7


D. 10

Question: 11
Predict the output of below code:

float values[3][4] = { {1.2, 9.0, 3.2},{0.5, 1.5, -1.2, 9.7},{7.3, 7.9, 4.8} } ;

printf("%.1f",values[2][3]);


A. 7.3


B. 7.9


C. 9.2


D. 0.0

Question: 12
What will be the output of the program ?
int main()
{
static char s[25] = “The cocaine man”;
int i=0;
char ch;
ch = s[++i];
printf(“%c”, ch);
ch = s[i++];
printf(“%c”, ch);
ch = i++[s];
printf(“%c”, ch);
ch = ++i[s];
printf(“%c”, ch);
return 0;
}



a.hhe!


b.he c


c.The c


d.Hhec

Question: 13
What will be the output of the program ?

include
include
int main()
{
static char str1[] = “dills”;
static char str2[20];
static char str3[] = “Daffo”;
int i;
i = strcmp(strcat(str3, strcpy(str2, str1)), “Daffodills”);
printf(“%d\n”, i);
return 0;
}



a.0


b.1


c.2


d.4

Question: 14
What is the output of the following code?

char str1[] = “apple”;
char str2[] = “apple”;
if (str1 == str2)
printf(“Equal”);
else
printf(“Not Equal”);



a)Equal


b)Not Equal


c)Compiler Error


d)Undefined behavior

Question: 15
What will be the output of the program ?

int main()
{
printf(“Compsci”, “Bits\n”);
return 0;
}



a.Error


b.Compsci Bits


c.Compsci


d.Bits

Question: 16
What will be the output of the program ?

int main()
{
char str[] = “Compsci\0\Bits\0”;
printf(“%s\n”, str);
return 0;
}



a.Bits


b.Compsci


c.Compsci Bits


d.Compsci\0Bits

Question: 17
Choose one correct option .

void main() {
char str[] = “C EXAMINATION”, rev[17];
int i = strlen(str),j=0;
for( ; i>=0 ; rev[j++] = str[i–])
rev[j] = str[j];
puts(rev);
}



a)NOITANIMAXE C


b)NOITANIMAXE


c)C


d)No output

Question: 18
What will be the output of the program ?
int main()
{
char p[] = “%d\n”;
p[1] = ‘c’;
printf(p, 65);
return 0;
}



a.A


b.a


c.c


d.65

Question: 19
Predict the output of below code:

int main() {

float arr[] = {12.4 , 2.3 , 4.5 , 6.7 };

printf(“%d” ,sizeof(arr)/sizeof(arr[0]));

return 0;



a)4


b)0


c)1


d)4.0

Question: 20
Predict the output of below code:

int main() {

char s[20]=”hello\0world”;

printf(“%s”,s);

return 0;

}



a)hello


b)world


c)hello\0


d)helloworld

Question: 21
What will strcmp() function do?



a) compares the first characters of the String


b) compares the string


c) undefined function


d) copies the string

Question: 22
What is the output of the following code?

char str[] = “Hello”;
printf(“%c”, str[3]);



a)H


b)e


c)l


d)0

Question: 23
void f(int a[][3])
{
a[0][1] = 3;
int i = 0, j = 0;
for (i = 0; i < 2; i++)
for (j = 0; j < 3; j++)
printf(“%d”, a[i][j]);
}
void main()
{
int a[2][3] = {0};
f(a);
}



a) 0 3 0 0 0 0


b) 1 3 1 1 1 1


c) Compile time error


d) All junk values

Question: 24
What is the return value of the following statement if it is placed in
C program ? strcmp(“ABC”, “ABC”);



a)33


b)-1


c)1


d)0

Question: 25
What will be the output of the program ?

int main()
{
char str[] = “Nagpur”;
str[0]=’K’;
printf(“%s, “, str);
str = “Kanpur”;
printf(“%s”, str+1);
return 0;
}



a.Kagpur, Kanpur


b.Nagpur, Kanpur

r


c.Kagpur, anpur


d.Erro

Question: 26
Which string function is used to find the length of a string in C?



a)strlen()


b)strlength()


c)length()


d)str_len()

Question: 27
Predict the output of below code:

int main()
{
int a[5] = {5, 1, 15, 20, 25};
int i, j, m;
i = ++a[1];
j = a[1]++;
m = a[i++];
printf(“%d, %d, %d”, i, j, m);
return 0;
}



2,5,15


3, 2, 15


1,2,5


12,15,1

Question: 28
What does the following piece of code do?

for(int i = 0; i < row; i++)
{
for(int j = 0; j < column; j++)
{
if(i == j)
sum = sum + (array[i][j]);
}
}
System.out.println(sum);



a) Normal of a matrix


b) Trace of a matrix


c) Square of a matrix


d) Transpose of a matrix

Question: 29
void main()
{
int a[2][3] = {1, 2, 3, , 4, 5};
int i = 0, j = 0;
for (i = 0; i < 2; i++)
for (j = 0; j < 3; j++)
printf(“%d”, a[i][j]);
}



a) 1 2 3 junk 4 5


b) Compile time error


c) 1 2 3 0 4 5


d) 1 2 3 3 4 5

Question: 30
How do you access the last element of an square matrix ?
int a[2][2] = {{5, 1}, {20, 25}};



a) a[2][2]


b)a[1][2]


c)a[0][1]


d)a[1][1]

-----------------------------------------------------------------------------------------
Write a program in C to find the maximum number between two numbers using a pointer.

Test Data :

Input the first number : 5

Input the second number : 6

Expected Output :



6 is the maximum number. 


#include<stdio.h>
int main() {
    int *p,*q,n1,n2;
    p=&n1;
    q=&n2;
printf("input the first number:");scanf("%d",&n1);
printf("input the second number:");scanf("%d",&n2);
(*p>*q)?printf("%d is maximum",n1):(*p<*q)?printf("%d is maximum",n2):printf("both are equal");
return 0;    
}
--------------------------------------------------------------------------
Write a program in C to add two numbers using pointers.

Test Data :

Input the first number : 5

Input the second number : 6

Expected Output :



The sum of the entered numbers is : 11 


#include<stdio.h>
int main() {
    int *p,*q,n1,n2,sum;
    p=&n1;
    q=&n2;
printf("input the first number:");scanf("%d",&n1);
printf("input the second number:");scanf("%d",&n2);
sum=*p+*q;
printf("the sum of the entered numbers is:%d",sum);
return 0;
----------------------------------------------------------------------------------------------------
Write a program in C to add numbers using call by reference.

Test Data :

Input the first number : 5

Input the second number : 6

Expected Output :



 The sum of 5 and 6 is 11



#include<stdio.h>
int add( int *p, int *q){
   int sum=*p+*q;
    return sum;
}
int main() {
int n1,n2,sum;
printf("input the first number:");
scanf("%d",&n1);
printf("input the second number");
scanf("%d",&n2);
sum=add(&n1,&n2);
printf("the sum of %d and %d is: %d",n1,n2,sum);
return 0;    
}
-------------------------------------------------
 Write a program in C to store n elements in an array and print the elements using a pointer.

Test Data :

Input the number of elements to store in the array :5

Input 5 number of elements in the array :

element - 0 : 5

element - 1 : 7

element - 2 : 2

element - 3 : 9

element - 4 : 8

Expected Output :



 The elements you entered are :                                        

 element - 0 : 5                                                

 element - 1 : 7                                                

 element - 2 : 2                                                

 element - 3 : 9                                                

 element - 4 : 8 


#include<stdio.h>
int main() {
  int s[100],i,n,*p=&s[0];
printf("enter the no of ele to store in the array:");
scanf("%d",&n);
printf("input %d ele in the array:\n",n);
for(i=0;i<n;i++){
    printf("ele-%d:",i);
 scanf("%d",&*(p+i));   
}                                                        
printf("the ele you entered are:\n");
for(i=0;i<n;i++){
 printf("ele-%d:%d\n",i,*(p+i));   
}                                                                         
return 0;    
}
----------------------------------------------------------------------------
Write a program in C to swap elements using call by reference.

Test Data :

Input the value of 1st element : 5

Input the value of 2nd element : 6

Input the value of 3rd element : 7

Expected Output :



The value before swapping are :                                        

element 1 = 5                                                 

element 2 = 6                                                 

element 3 = 7                                                 

                                                       

The value after swapping are :                                        

element 1 = 7                                                 

element 2 = 5                                                 

element 3 = 6 

#include<stdio.h>
int main(){
  int n1,n2,n3,i,*p=&n1,*q=&n2,*;
printf("input the value of 1st element:");
scanf("%d",&n1);
printf("input the value of 2nd element:");
scanf("%d",&n2);
printf("input the value of 3rd element:");
scanf("%d",&n3);
printf("The values before swapping are:");
printf("element 1=%d\n element 1=%d\n element 1=%d\n ",)
printf("The values after swapping are:");
swap(int *p,int *q,int *r);
return 0;
}
int swap(a,b,c){
    
}
------------------------------------------------------------------------

Write a program in C to find the square of any number using the function.

Test Data :

Input any number for square : 20

Expected Output :



The square of 20 is : 400.00



#include <stdio.h>
// Function to calculate the square of a number
double square(double n) {
    return n*n;
}
int main()
{
    int num;
    double sqr;
 printf("input any number for square:");
 scanf("%d",&num);
 sqr=square(num);
 printf("the square of 20 is:%ld",sqr);
    return 0;
}
-----------------------------------------------------------------------------------------
Write a program in C to check if a given number is even or odd using the function.

Test Data :

Input any number : 5

Expected Output :

The entered number is odd. 



#include <stdio.h>
 // Function to check even or odd
int isEven(int num)
{
    return num%2;
}
int main()
{
    int n;
 printf("Input any number:");scanf("%d",&n);
 printf((isEven(n)==0)?"even":"odd");
return 0;    
}
-----------------------------------------------------------
Write a program in C to check whether a number is a prime number or not by using the function.

Test Data :

Input a positive number : 5

Expected Output :

The number 5 is a prime number.


#include <stdio.h>
#include <stdbool.h>
// Function to check if a number is prime
bool checkPrime(int num) {
    int i;
   for(i=2;i<=num/2;i++){
    if(num%i!=0)
     continue;
     else 
     return 1;
   }
   return 0;
}
int main() {
    int n,x;
  printf("input a positive number:");
  scanf("%d",&n);
  x=checkPrime(n);
     if(x==1) 
     printf("not prime");
      else
      printf("prime");
return 0;    
}
----------------------------------------------------------------
Write a C program to find the biggest number between three number using the function.

Test Data :

Input three positive number : 13 31 19

Expected Output :

The biggest number is 31.


#include <stdio.h>

// Function to find the maximum of three numbers
int maxNum(int num1, int num2, int num3) {
    if(num1>num2&&num1>num3)
        return num1;
        else if(num2>num3)
        return num2;
        else
        return num3;
}
int main(){
    int n1,n2,n3,x;
printf("input three positive number:");
scanf("%d%d%d",&n1,&n2,&n3);
x=maxNum(n1,n2,n3);
printf("the biggest number is:%d",x);
return 0;    
} //write Your Code Here...
---------------------------------------------------------------------
Write a program in C to swap two numbers using a function.

Test Data :

Input 1st number : 2

Input 2nd number : 4

Expected Output :



Before swapping: n1 = 2, n2 = 4                          

After swapping: n1 = 4, n2 = 2 




#include <stdio.h>
// Function to swap two numbers
void swap(int num1, int num2) {
    int t=num1;
    num1=num2;
    num2=t;
    printf("After swapping:n1=%d,n2=%d\n",num1,num2);
}
int main(){
    int n1,n2;
  printf("input 1st number:");
  scanf("%d",&n1);
  printf("input 2st number:");
  scanf("%d",&n2);
  printf("Before swapping:n1=%d,n2=%d\n",n1,n2);
  swap(n1,n2);
return 0;    
}//Write Your Code Here...
-----------------------------------------------------------------
Write a program in C to add n natural numbers using a function.

Test Data :

Input n value : 10

Expected Output :

The sum of 10 natural numbers is 55


#include <stdio.h>

// Function to calculate the sum of n natural numbers
int sumOfNaturalNumbers(int num) {
    int i,sum;
    for(i=num;i>=1;i--)
    sum+=i;
    return sum;
}
int main(){
    int n,x;
  printf("input n value:");
  scanf("%d",&n);
 x= sumOfNaturalNumbers(n);
  printf("The sum of 10 natural is %d",x);
return 0;    
}  //Write Your Code Here...
--------------------------------------------------------------
Implement a function to check if a given string is a palindrome.

Input: radar

Output: The string is a palindrome.



Input: hello

Output: The string is not a palindrome.



Explanation:

----------------------------------------------------------------------



The isPalindrome function takes a character array (string) str as input and returns a boolean value (true if the string is a palindrome, false otherwise).



The function uses the strlen function from the <string.h> library to determine the length of the input string str.



Two integer variables, start and end, are initialized to 0 and len - 1, respectively. len is the length of the string.



The function uses a while loop that runs as long as start is less than end.



Inside the loop, the function compares the characters at positions start and end in the string. If the characters don't match, it immediately returns false, indicating that the string is not a palindrome.



The loop continues until start becomes greater than or equal to end, at which point the entire string has been checked for palindrome properties.



If all characters match during the loop iterations, the function returns true, indicating that the string is a palindrome.



The main function asks the user to input a string and calls the isPalindrome function with the given input. It then prints whether the input string is a palindrome or not.





#include <stdio.h>
#include <stdbool.h>
#include <string.h>

bool isPalindrome(char* str);
int main() {
    char s[100];
    bool x;
    printf("input the string:");
    scanf("%s",s);
    x=isPalindrome(s);
    if(x==true)
    printf("palindrome");
    else
    printf("not a palindrome");
    return 0;
}

bool isPalindrome(char str[100]) {
    int l1,i;
    bool y=true;
    l1=strlen(str);
    for(i=0;str[i]!=0;i++){
        if(str[i]!=str[l1-i-1])
        y=false;
        else
        continue;
    }
    return y;
}

#include <stdio.h>
#include <stdbool.h>
#include <string.h>

bool isPalindrome(const char str[]);
int main() {
    char s[100];
    bool x;
    printf("input the string:");
    scanf("%s",s);
    x=isPalindrome(s);
    if(x)
    printf("palindrome");
    else
    printf("not a palindrome");
    return 0;
}

bool isPalindrome(const char str[]) {
    int l1,i;
    l1=strlen(str);
    for(i=0;str[i]!='\0';i++){
        if(str[i]!=str[l1-i-1])
        return 0;
        else
        continue;
    }
    return 1;
}
-------------------------------------------------------------------------
Create a function to calculate the sum of all elements in an integer array.



Input:

Size of the array: 5

Array elements: 10 20 30 40 50



Output:

Sum of all elements in the array: 150



Explanation:

--------------------------------------------------------------



The arraySum function takes two arguments - an integer array arr and its size size. It returns an integer representing the sum of all elements in the array.



Inside the function, an integer variable sum is initialized to 0. This variable will hold the cumulative sum of the elements as we iterate through the array.



The function uses a for loop to iterate through the array. The loop runs from i = 0 to i < size, covering all elements in the array.



In each iteration, the current element arr[i] is added to the sum variable using the += operator. This accumulates the sum as we move through the array.



Once the loop finishes, the function has added all the elements of the array to the sum.



The function then returns the value of sum, which represents the sum of all elements in the array.



The main function asks the user to input the size of the array and the elements of the array. It then calls the arraySum function with the given input and prints the sum of all elements in the array.




#include <stdio.h>

// Function to calculate the sum of all elements in an integer array
int arraySum(const int arr[], int size) {
   int i,sum=0;
    for(i=0;i<size;i++)
        sum+=arr[i];
    return sum;
}

int main() {
    int n,x,a[100],i;
    printf("enter the size of the array:");
    scanf("%d",&n);
    printf("Array elements:");
    for(i=0;i<n;i++){
        scanf("%d",&a[i]);
    }
    x=arraySum(a,n);
    printf("sum of the ele in the array:%d",x);
    return 0;
}
-------------------------------------------------------------------------
Implement a function to check if two strings are anagrams of each other.



Input:

First string: listen

Second string: silent



Output:

The strings are anagrams.



Input:

First string: hello

Second string: world



Output:

The strings are not anagrams.



Explanation:

-------------------------------------------------------------



The areAnagrams function takes two character arrays (strings) str1 and str2 as input and returns a boolean value (true if the strings are anagrams, false otherwise).



The function first checks if the lengths of the two strings are different. If they are different, the function immediately returns false, as strings with different lengths cannot be anagrams.



The function then creates two integer arrays freq1 and freq2 of size 256 (assuming ASCII characters) to store the frequency of characters in both strings. Each element of the arrays corresponds to the frequency of a character represented by its ASCII value.



The function then populates the frequency arrays by iterating through the characters of both strings. It counts the occurrences of each character by incrementing the corresponding element in the frequency array.



After populating the frequency arrays, the function compares them to check if the strings are anagrams. If the frequency of any character in str1 differs from the frequency of the same character in str2, the function returns false, as the strings cannot be anagrams.



If the function completes the loop without finding any discrepancies in the frequency arrays, it returns true, indicating that the strings are anagrams of each other.



The main function asks the user to input two strings and calls the areAnagrams function with the given inputs. It then prints whether the input strings are anagrams or not.




#include <stdio.h>
#include <stdbool.h>
#include <string.h>
// Function to check if two strings are anagrams of each other
bool areAnagram(const char str1[], const char str2[]) {
    int l1,l2,i,j,c=0;
    l1=strlen(str1);
    l2=strlen(str2);
    if(l1==l2){
        for(i=0;i<l1;i++){
            for(j=0;j<l2;j++){
                if(str1[i]==str2[j]){c++;break;}
            }
        }if(c==l1&&c==l2)
        return 1;
    else
    return 0;
}else
return 0;
}

int main() {
    char s1[100],s2[100];
    bool x;
printf("enter the 1st string:");
scanf("%s",s1);
printf("enter the 2st string:");
scanf("%s",s2);
 x=areAnagram(s1,s2);
if(x)
    printf("anagram");
    else
    printf("not anagram");
    return 0;
}
-----------------------------------------------------------------------------
Create a function to check if a string contains only digits.



Input:

String: 12345

Output:

The string contains only digits.



Input:

String: 45A7

Output:

The string contains non-digit characters.



Explanation:

-----------------------------------------------------



The containsOnlyDigits function takes a character array (string) str as input and returns a boolean value (true if the string contains only digits, false otherwise).



The function uses a for loop to iterate through the characters of the string. The loop runs until it encounters the null character \0, which marks the end of the string.



In each iteration, the function checks if the current character str[i] is a digit using the isdigit function from the <ctype.h> library. The isdigit function returns a non-zero value if the character is a digit (0 to 9), and it returns 0 otherwise.



If the current character is not a digit (i.e., isdigit(str[i]) returns 0), the function immediately returns false, indicating that the string contains non-digit characters.



If the loop completes without finding any non-digit characters, the function returns true, indicating that the string contains only digits.



The main function asks the user to input a string and calls the containsOnlyDigits function with the given input. It then prints whether the input string contains only digits or not.




#include <stdio.h>
#include <stdbool.h>
#include <ctype.h>
#include<string.h>

// Function to check if a string contains only digits
bool containsOnlyDigits(const char str[]) {
    int d=0,nd=0,i,l1;
    l1=strlen(str);
    for(i=0;i<l1;i++){
    if(str[i]<='9'&&str[i]>='0')d++;
    else if((str[i]>='a'&&str[i]<='z')||(str[i]>='A'&&str[i]<='Z'))nd++;
    }
    if(d==l1&&nd==0)
    return true; 
    else
    return false;
}

int main() {
    bool x;
    char s[100];
    printf("enter the string:");
    scanf("%s",s);
    x=containsOnlyDigits(s);
    if(x)
     printf("The string contains only digits");
     else
     printf("The string contains non-digit characters");
    return 0;
}
-----------------------------------------------------------------------------------
Program to swap all elements of two integer arrays using user define function in C.

Input as :

Enter array size : 6

Enter 6 elements for 1st array : 1 2 3 4 5 6

Enter 6 elements for 2nd array : 7 8 9 0 1 2



Output as :

After swapping :

1st array : 7 8 9 0 1 2

2nd array : 1 2 3 4 5 6

#include <stdio.h>

// Function to swap the contents of two integer arrays

void swapArrays(int arr1[], int arr2[], int size) {
    int t[100];
    for(int i=0;i<size;i++){
        t[i]=arr1[i];
        arr1[i]=arr2[i];
        arr2[i]=t[i];
    }
    printf("after swapping:\n");
    printf("1st array:");
    displayArray(arr1,size);
    printf("\n2nd array:");
    displayArray(arr2,size);
}

// Function to display the contents of an integer array
void displayArray(int arr[], int size) {
    
    for(int i=0;i<size;i++){
        printf("%4d",arr[i]);
    }
}

int main() {
    int n,i,a[100],b[100];
   printf("enter array size:");
   scanf("%d",&n);
   printf("enter the %d elements for 1st array:",n);
   for(i=0;i<n;i++){
       scanf("%d",&a[i]);
   }
   printf("enter the %d elements for 2st array:",n);
   for(i=0;i<n;i++){
       scanf("%d",&b[i]);
   }
   swapArrays(a,b,n);
    return 0;
}
-----------------------------------------------------------------------------------
Write a C program to find all the Armstrong number in beetween 100 to 10000 by using 2 different 

user defined function and one main function to display all the Armstrong number in the given range.

Armstrong number Example : 

153 = 1^3 + 5^3 + 3^3 = 1 + 125 + 27 = 153



Armstrong numbers between 100 and 10000 are:

153

370

371

407

1634

8208

9474


#include <stdio.h>
#include <math.h>
int power(int base, int exponent) {
    int x;
  x= pow(base,exponent);
  //printf("%d",x);
    return x;
}


int isArmstrong(int num) {
    int c=0,a,s=0,temp;
    //printf("%d",num);
     temp=num;
    while(temp!=0){
       temp/=10;
        c++;
    }
    //printf("%d",c);
    temp=num;
    while(temp!=0){
        a=temp%10;
       s+=power(a,c);
        temp/=10;
    }
    //printf("%d ",s);

    return s;
}

int main() {
    int n,i,y;
    printf("enter the number:");
    scanf("%d",&n);
    for(i=100;i<n;i++){
       y= isArmstrong(i);
       if(y==i)
        printf("%d\n",y);
    }

      return 0;
}
------------------------------------------------------------------
Find the Largest Element: Create a program that finds the largest element in an array of integers. Implement separate functions for input, finding the largest element, and main function to displaying the result.



Input as : 

Enter array size : 6

Enter 6 elements : 5 6 3 6 7 9



Output as : 

The largest element is : 9


#include <stdio.h>


void inputArray(int arr[], int size) {
    int i;
    for(i=0;i<size;i++){
        scanf("%d",&arr[i]);
    }
        //write your code here...
}


int findLargestElement(int arr[], int size) {
    int i,j,max;
    for(i=0;i<size;i++){
        for(j=i+1;j<size;j++){
          if(arr[i]<arr[j])
          max=arr[j];
        }
    }
    return max;
}

int main() {
    int a[100],n,x;
    printf("enter array size:");
    scanf("%d",&n);
    printf("enter the %d ele is:",n);
    inputArray(a,n);
    x=findLargestElement(a,n);
    printf("The largest ele is:%d",x);
    return 0;
}
-------------------------------------------------------------
Bank Account Management: Develop a program that simulates a simple bank account system. Users can create accounts, deposit money, withdraw money, and check their balances. Implement separate functions for these operations. Take the initial balance as Rs.2000.

Condition : 

For deposit :

* If the user want to deposit 0 or negetive amount then print "Invalid amount to deposit"



For withdraw : 

* If the user want to withdraw 0 or negetive amount then print "Invalid amount to withdrawal"

* If the user given amount is greater than the balance then print "Insufficient Funds"


#include <stdio.h>

float balance =2000; 

void createAccount() {
    char name[20];
    int an;
printf("enter your name:");
scanf("%s",name);
printf("enter your account number:");
scanf("%d",&an);
printf("your bank balance:%f",balance);
return main();
//write your code here...    
}

void deposit() {
    float dp;
    printf("enter the amount to be deposited:");
    scanf("%f",&dp);
    if(dp<=0){
        printf("invalid amount to deposit");
        }else{
        printf("succesfully deposited\n");
        balance=balance+dp;
        printf("your balace amount:%f",balance);
        return main();
    }
    //write your code here...
}

void withdraw() {
    int wd;
    printf("enter the withdraw amount:");
    scanf("%d",&wd);
    if(wd<=0){
        printf("invalid amount to withdraw");
    }else if(wd>balance){
      printf("insuffient funds");  
    }else{
        printf("Withdraw succesfully\n");
        balance=balance-wd;
         printf("your balace amount:%f",balance);
         return main();
    }
    
    //write your code here...
}

void checkBalance() {
   printf("your bank balance:%f",balance);
   return main();
   //write your code here...
}

int main() {
    //write your code here...
    int ch;
    printf("\n-------Bank account management---------\n");
    printf("1.createacount\t 2.deposit\t 3.withdraw\t 4.checkbalance");
    printf("enter your chioce:");
    scanf("%d",&ch);
    switch(ch){
        case 1:createAccount();break;
        case 2:deposit();break;
        case 3:withdraw();break;
        case 4:checkBalance();break;
        default:printf("invlid choice");
    }
    return 0;
}
-----------------------------------------------------------------------
Amicable Numbers:

Write a program to find and display all pairs of amicable numbers within a given range, by using different user defined functions.

Amicable numbers are pairs of numbers where the sum of the proper divisors of one number is equal to the other number.

Example : 

-> a = 220



  The divisors of 220 are 1, 2, 4, 5, 10, 11, 20, 22, 44, 55, and 110 excluding itself.

  The sum of these divisors is 284: 1 + 2 + 4 + 5 + 10 + 11 + 20 + 22 + 44 + 55 + 110 = 284.



-> b = 284



  The divisors of 284 are 1, 2, 4, 71, and 142 excluding itself.

  The sum of these divisors is 220: 1 + 2 + 4 + 71 + 142 = 220.



So, (220, 284) is a pair of amicable numbers.

Amicable pairs between 100 and 10000 are:

(220, 284)

(284, 220)

(1184, 1210)

(1210, 1184)

(2620, 2924)

(2924, 2620)

(5020, 5564)

(5564, 5020)

(6232, 6368)

(6368, 6232)


#include <stdio.h>
int sumOfDivisors(int num) {
    int sum=0;
    for(int i=1;i<=num/2;i++){
        if(num%i==0){
            sum+=i;
        }
    }
    //write your code here...
    return sum;
}


int areAmicable(int num1, int num2) {
    for(int i=num1;i<=num2;i++){
        int sum=sumOfDivisors(i);
        int sum1=sumOfDivisors(sum);
        if(sum!=i&&sum1==i){
            printf("%d %d \n",sum,i);
        }
    }
    //write your code here...
    return 0;
}

int main() {
    int num1=100,num2=10000;
    areAmicable(num1,num2);
    //write your code here...
    return 0;
}
-------------------------------------------------------------------

Write a program in C to print the first 50 natural numbers using recursion.

Expected Output:

 The natural numbers are : 1  2  3
  4  5  6  7  8  9  10  11  12  13
  14  15  16  17  18  19  20  21  
22  23  24  25  26  27  28  29  30
  31  32  33  34  35  36  37  38  
39  40  41  42  43  44  45  46  47
  48  49  50 



#include<stdio.h>
int i=1;
int main()//caller
{
    if(i==1){
     printf("the natural numbers are:");   
    }
    printf("%4d",i);
    i++;
    if(i<=50)main();//callie
    return 0;
}
---------------------------------------------------------------------------
Write a program in C to calculate the sum of numbers from 1 to n using recursion.

Test Data :

Input the last number of the range starting from 1 : 5

Expected Output:

The sum of numbers from 1 to 5 : 
15



#include <stdio.h>

int sumOfRange(int n);

int main() {
    int n1;
    int sum;
    printf("Input the last number of the range starting from 1: ");
    scanf("%d", &n1);

    sum = sumOfRange(n1);
    printf("\nThe sum of numbers from 1 to %d: %d\n\n", n1, sum);

    return 0;
}

int sumOfRange(int n1) {
    int res;
    
    if (n1 == 1) {
        return 1;
    } else {
        res = n1 + sumOfRange(n1 - 1); // calling the function sumOfRange itself
    }
    
    return res;
}
-------------------------------------------------------------------------------------------
Write a program in C to print the Fibonacci Series using recursion. >

Test Data :

Input number of terms for the Series (< 20) : 10

Expected Output:

 Input number of terms for the Series (< 20) : 10                                
 The Series are :                                                                
 1  1  2  3  5  8  13  21  34  55


#include <stdio.h>

int fib(int n);

int main() {
    int n;
    printf("Input number of terms for the Series (< 20): ");
    scanf("%d", &n);

    if (n < 1 || n >= 20) {
        printf("Invalid number of terms. Please enter a value between 1 and 19.\n");
        return 1;
    }

    printf("Fibonacci Series up to %d terms:\n", n);
    for (int i = 0; i < n; i++) {
        printf("%d ", fib(i));
    }
    printf("\n");

    return 0;
}

int fib(int n) {
    if (n == 0 || n == 1) {
        return n;
    } else {
        return fib(n - 1) + fib(n - 2);
    }
}
-------------------------------------------------------------------------------------
Write a program in C to find the sum of digits of a number using recursion. >

Test Data :

Input any number to find sum of digits: 1234

Expected Output:

The Sum of digits of 1234 = 10 



#include <stdio.h>

int sumOfDigits(int num);

int main() {
    int num, sum;
    printf("Enter any number to find sum of digits: ");
    scanf("%d", &num);

    sum = sumOfDigits(num);
    printf("Sum of digits of %d = %d\n", num, sum);

    return 0;
}

int sumOfDigits(int num) {
    // Base condition
    if (num == 0) {
        return 0;
    }
    
    // Recursive step
    return (num % 10) + sumOfDigits(num / 10);
}
---------------------------------------------------------------------
Write a program in C to find the Factorial of a number using recursion.

Test Data :

Input a number : 5

Expected Output:

The Factorial of 5 is : 120



#include <stdio.h>

long int factorial(int n);

int main() {
    int n;
    printf("Enter a positive integer: ");
    scanf("%d", &n);

    if (n < 0) {
        printf("Factorial is not defined for negative numbers.\n");
        return 1;
    }

    printf("Factorial of %d = %ld\n", n, factorial(n));

    return 0;
}

long int factorial(int n) {
    if (n >= 1) {
        return n * factorial(n - 1);
    } else {
        return 1;
    }
}
-------------------------------------------------------------------------